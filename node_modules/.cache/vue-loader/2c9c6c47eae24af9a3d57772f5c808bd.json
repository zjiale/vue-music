{"remainingRequest":"E:\\vue-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-music\\src\\components\\music-video\\music-video.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-music\\src\\components\\music-video\\music-video.vue","mtime":1572602295376},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getMvList, getMvUrl } from 'api/mv'\r\nimport { createMv } from 'common/js/mv'\r\nimport { playlistMixin } from 'common/js/mixin'\r\nimport { mapMutations, mapGetters } from 'vuex'\r\nimport Singer from 'common/js/singer'\r\nimport BaseVideo from 'base/base-video/base-video'\r\nimport Scroll from 'base/scroll/scroll'\r\n\r\nexport default {\r\n  mixins: [playlistMixin],\r\n  data () {\r\n    return {\r\n      mvList: [],\r\n      mvHeight: 0\r\n    }\r\n  },\r\n  created () {\r\n    this._getMvList()\r\n  },\r\n  computed: {\r\n    ...mapGetters(([\r\n      'playing'\r\n    ]))\r\n  },\r\n  methods: {\r\n    handlePlaylist (playlist) {\r\n      const bottom = playlist.length > 0 ? '60px' : 0\r\n\r\n      this.$refs.videoContent.style.bottom = bottom\r\n      this.$refs.videoList.refresh()\r\n    },\r\n    selectSinger (item) {\r\n      let singer = new Singer({\r\n        id: item.sid,\r\n        name: item.singer\r\n      })\r\n      this.$router.push({\r\n        path: `/singer/${item.sid}`\r\n      })\r\n      this.setSinger(singer)\r\n    },\r\n    play () {\r\n      if (this.playing) {\r\n        this.setPlayingState(!this.playing)\r\n      }\r\n    },\r\n    _getMvList () {\r\n      getMvList().then((res) => {\r\n        let { list } = res.data.mv\r\n        getMvUrl(list).then((res) => {\r\n          this.mvList = this._normalizeMv(list, res)\r\n        })\r\n      })\r\n    },\r\n    // list为mv相关的信息，res为mv的地址和vid信息\r\n    _normalizeMv (list, res) {\r\n      let ret = []\r\n      let result = []\r\n      let mvList = []\r\n      let vkeys = res.getMvUrl.data\r\n      for (var key in vkeys) {\r\n        ret.push({\r\n          vid: key,\r\n          url: vkeys[key].mp4[1].freeflow_url[0]\r\n        })\r\n      }\r\n      list.forEach((item) => {\r\n        ret.forEach((res) => {\r\n          if (item.v_id === res.vid) {\r\n            result.push({\r\n              mv_id: item.mv_id,\r\n              mv_name: item.mv_name,\r\n              mv_pic_url: item.mv_pic_url,\r\n              singer_name: item.singer_name,\r\n              singerMID: item.singerMID,\r\n              v_id: item.v_id,\r\n              url: res.url\r\n            })\r\n          }\r\n        })\r\n      })\r\n      result.forEach((item) => {\r\n        mvList.push(createMv(item))\r\n      })\r\n      return mvList\r\n    },\r\n    _calculateHeight () {\r\n      const item = this.$refs.item\r\n      let offsetHeight = 0\r\n      for (let i = 0; i < item.length; i++) {\r\n        let mv = item[i]\r\n        offsetHeight = mv.offsetHeight\r\n      }\r\n      return offsetHeight\r\n    },\r\n    ...mapMutations({\r\n      setSinger: 'SET_SINGER',\r\n      setPlayingState: 'SET_PLAYING_STATE',\r\n      setVideoState: 'SET_VIDEO_STATE'\r\n    })\r\n  },\r\n  watch: {\r\n    // 异步加载的数据需要在watch观察数据然后再进行dom操作\r\n    mvList () {\r\n      setTimeout(() => {\r\n        this.mvHeight = this._calculateHeight()\r\n      }, 20)\r\n    }\r\n  },\r\n  components: {\r\n    BaseVideo,\r\n    Scroll\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["music-video.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"music-video.vue","sourceRoot":"src/components/music-video","sourcesContent":["<template>\r\n  <div class=\"video-cotent\" ref=\"videoContent\">\r\n    <scroll ref=\"videoList\" class=\"video-list\" :data=\"mvList\">\r\n      <ul>\r\n        <li class=\"item\" ref=\"item\" v-for=\"item in mvList\" :key=\"item.vid\">\r\n          <base-video :vid=\"item.vid\" :src=\"item.url\" :poster=\"item.image\" @play=\"play\"></base-video>\r\n          <div class=\"video-info\">\r\n            <div class=\"singer\" @click=\"selectSinger(item)\">\r\n              <img class=\"avatar\" v-lazy=\"item.avatar\" />\r\n              <span class=\"name\" v-html=\"item.singer\"></span>\r\n            </div>\r\n            <span class=\"song\" v-html=\"item.name\"></span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </scroll>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/ecmascript-6\">\r\nimport { getMvList, getMvUrl } from 'api/mv'\r\nimport { createMv } from 'common/js/mv'\r\nimport { playlistMixin } from 'common/js/mixin'\r\nimport { mapMutations, mapGetters } from 'vuex'\r\nimport Singer from 'common/js/singer'\r\nimport BaseVideo from 'base/base-video/base-video'\r\nimport Scroll from 'base/scroll/scroll'\r\n\r\nexport default {\r\n  mixins: [playlistMixin],\r\n  data () {\r\n    return {\r\n      mvList: [],\r\n      mvHeight: 0\r\n    }\r\n  },\r\n  created () {\r\n    this._getMvList()\r\n  },\r\n  computed: {\r\n    ...mapGetters(([\r\n      'playing'\r\n    ]))\r\n  },\r\n  methods: {\r\n    handlePlaylist (playlist) {\r\n      const bottom = playlist.length > 0 ? '60px' : 0\r\n\r\n      this.$refs.videoContent.style.bottom = bottom\r\n      this.$refs.videoList.refresh()\r\n    },\r\n    selectSinger (item) {\r\n      let singer = new Singer({\r\n        id: item.sid,\r\n        name: item.singer\r\n      })\r\n      this.$router.push({\r\n        path: `/singer/${item.sid}`\r\n      })\r\n      this.setSinger(singer)\r\n    },\r\n    play () {\r\n      if (this.playing) {\r\n        this.setPlayingState(!this.playing)\r\n      }\r\n    },\r\n    _getMvList () {\r\n      getMvList().then((res) => {\r\n        let { list } = res.data.mv\r\n        getMvUrl(list).then((res) => {\r\n          this.mvList = this._normalizeMv(list, res)\r\n        })\r\n      })\r\n    },\r\n    // list为mv相关的信息，res为mv的地址和vid信息\r\n    _normalizeMv (list, res) {\r\n      let ret = []\r\n      let result = []\r\n      let mvList = []\r\n      let vkeys = res.getMvUrl.data\r\n      for (var key in vkeys) {\r\n        ret.push({\r\n          vid: key,\r\n          url: vkeys[key].mp4[1].freeflow_url[0]\r\n        })\r\n      }\r\n      list.forEach((item) => {\r\n        ret.forEach((res) => {\r\n          if (item.v_id === res.vid) {\r\n            result.push({\r\n              mv_id: item.mv_id,\r\n              mv_name: item.mv_name,\r\n              mv_pic_url: item.mv_pic_url,\r\n              singer_name: item.singer_name,\r\n              singerMID: item.singerMID,\r\n              v_id: item.v_id,\r\n              url: res.url\r\n            })\r\n          }\r\n        })\r\n      })\r\n      result.forEach((item) => {\r\n        mvList.push(createMv(item))\r\n      })\r\n      return mvList\r\n    },\r\n    _calculateHeight () {\r\n      const item = this.$refs.item\r\n      let offsetHeight = 0\r\n      for (let i = 0; i < item.length; i++) {\r\n        let mv = item[i]\r\n        offsetHeight = mv.offsetHeight\r\n      }\r\n      return offsetHeight\r\n    },\r\n    ...mapMutations({\r\n      setSinger: 'SET_SINGER',\r\n      setPlayingState: 'SET_PLAYING_STATE',\r\n      setVideoState: 'SET_VIDEO_STATE'\r\n    })\r\n  },\r\n  watch: {\r\n    // 异步加载的数据需要在watch观察数据然后再进行dom操作\r\n    mvList () {\r\n      setTimeout(() => {\r\n        this.mvHeight = this._calculateHeight()\r\n      }, 20)\r\n    }\r\n  },\r\n  components: {\r\n    BaseVideo,\r\n    Scroll\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\r\n@import '~common/stylus/variable'\r\n.video-cotent\r\n  position fixed\r\n  width 100%\r\n  top 88px\r\n  bottom 0\r\n  .video-list\r\n    height 100%\r\n    overflow hidden\r\n    .item\r\n      display flex\r\n      flex-direction column\r\n      padding-top 15px\r\n      &:last-child\r\n        padding-bottom 10px\r\n      .video-info\r\n        display flex\r\n        justify-content space-between\r\n        align-items center\r\n        margin-top 8px\r\n        padding 0 10px\r\n        font-size $font-size-medium\r\n        color $color-theme\r\n        .singer\r\n          display flex\r\n          align-items center\r\n          .avatar\r\n            width 28px\r\n            height 28px\r\n            border-radius 50%\r\n            margin-right 5px\r\n</style>"]}]}