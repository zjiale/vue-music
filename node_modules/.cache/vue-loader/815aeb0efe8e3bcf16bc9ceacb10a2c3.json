{"remainingRequest":"E:\\vue-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-music\\src\\components\\user-center\\user-center.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-music\\src\\components\\user-center\\user-center.vue","mtime":1571824663905},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Switches from 'base/switches/switches'\r\nimport Scroll from 'base/scroll/scroll'\r\nimport SongList from 'base/song-list/song-list'\r\nimport Song from 'common/js/song'\r\nimport NoResult from 'base/no-result/no-result'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport { playlistMixin } from 'common/js/mixin'\r\n\r\nexport default {\r\n  mixins: [playlistMixin],\r\n  data () {\r\n    return {\r\n      currentIndex: 0,\r\n      switches: [\r\n        { name: '我喜欢的' },\r\n        { name: '最近听的' }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    noResult () {\r\n      if (this.currentIndex === 0) {\r\n        return !this.favoriteList.length\r\n      } else {\r\n        return !this.playHistory.length\r\n      }\r\n    },\r\n    noResultDesc () {\r\n      if (this.currentIndex === 0) {\r\n        return '暂无收藏歌曲'\r\n      } else {\r\n        return '你还没有听过歌曲'\r\n      }\r\n    },\r\n    ...mapGetters([\r\n      'favoriteList',\r\n      'playHistory'\r\n    ])\r\n  },\r\n  methods: {\r\n    handlePlaylist (playlist) {\r\n      const bottom = playlist.length > 0 ? '60px' : ''\r\n      this.$refs.listWrapper.style.bottom = bottom\r\n      this.$refs.favoriteList && this.$refs.favoriteList.refresh()\r\n      this.$refs.playList && this.$refs.playList.refresh()\r\n    },\r\n    switchItem (index) {\r\n      this.currentIndex = index\r\n    },\r\n    selectSong (song) {\r\n      this.insertSong(new Song(song))\r\n    },\r\n    back () {\r\n      this.$router.back()\r\n    },\r\n    random () {\r\n      let list = this.currentIndex === 0 ? this.favoriteList : this.playHistory\r\n      if (list.length === 0) {\r\n        return\r\n      }\r\n      list = list.map((song) => {\r\n        return new Song(song)\r\n      })\r\n      this.randomPlay({\r\n        list\r\n      })\r\n    },\r\n    ...mapActions([\r\n      'insertSong',\r\n      'randomPlay'\r\n    ])\r\n  },\r\n  components: {\r\n    Switches,\r\n    Scroll,\r\n    SongList,\r\n    NoResult\r\n  }\r\n}\r\n",{"version":3,"sources":["user-center.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user-center.vue","sourceRoot":"src/components/user-center","sourcesContent":["<template>\r\n  <transition name=\"slide\">\r\n    <div class=\"user-center\">\r\n      <div class=\"back\" @click=\"back\">\r\n        <i class=\"icon-back\"></i>\r\n      </div>\r\n      <div class=\"switches-wrapper\">\r\n        <switches @switch=\"switchItem\" :switches=\"switches\" :currentIndex=\"currentIndex\"></switches>\r\n      </div>\r\n      <div ref=\"playBtn\" class=\"play-btn\" @click=\"random\">\r\n        <i class=\"icon-play\"></i>\r\n        <span class=\"text\">随机播放全部</span>\r\n      </div>\r\n      <div class=\"list-wrapper\" ref=\"listWrapper\">\r\n        <scroll ref=\"favoriteList\" class=\"list-scroll\" v-if=\"currentIndex===0\" :data=\"favoriteList\">\r\n          <div class=\"list-inner\">\r\n            <song-list :songs=\"favoriteList\" @select=\"selectSong\"></song-list>\r\n          </div>\r\n        </scroll>\r\n        <scroll ref=\"playList\" class=\"list-scroll\" v-if=\"currentIndex===1\" :data=\"playHistory\">\r\n          <div class=\"list-inner\">\r\n            <song-list :songs=\"playHistory\" @select=\"selectSong\"></song-list>\r\n          </div>\r\n        </scroll>\r\n      </div>\r\n      <div class=\"no-result-wrapper\" v-show=\"noResult\">\r\n        <no-result :title=\"noResultDesc\"></no-result>\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script type=\"text/ecmascript-6\">\r\nimport Switches from 'base/switches/switches'\r\nimport Scroll from 'base/scroll/scroll'\r\nimport SongList from 'base/song-list/song-list'\r\nimport Song from 'common/js/song'\r\nimport NoResult from 'base/no-result/no-result'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport { playlistMixin } from 'common/js/mixin'\r\n\r\nexport default {\r\n  mixins: [playlistMixin],\r\n  data () {\r\n    return {\r\n      currentIndex: 0,\r\n      switches: [\r\n        { name: '我喜欢的' },\r\n        { name: '最近听的' }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    noResult () {\r\n      if (this.currentIndex === 0) {\r\n        return !this.favoriteList.length\r\n      } else {\r\n        return !this.playHistory.length\r\n      }\r\n    },\r\n    noResultDesc () {\r\n      if (this.currentIndex === 0) {\r\n        return '暂无收藏歌曲'\r\n      } else {\r\n        return '你还没有听过歌曲'\r\n      }\r\n    },\r\n    ...mapGetters([\r\n      'favoriteList',\r\n      'playHistory'\r\n    ])\r\n  },\r\n  methods: {\r\n    handlePlaylist (playlist) {\r\n      const bottom = playlist.length > 0 ? '60px' : ''\r\n      this.$refs.listWrapper.style.bottom = bottom\r\n      this.$refs.favoriteList && this.$refs.favoriteList.refresh()\r\n      this.$refs.playList && this.$refs.playList.refresh()\r\n    },\r\n    switchItem (index) {\r\n      this.currentIndex = index\r\n    },\r\n    selectSong (song) {\r\n      this.insertSong(new Song(song))\r\n    },\r\n    back () {\r\n      this.$router.back()\r\n    },\r\n    random () {\r\n      let list = this.currentIndex === 0 ? this.favoriteList : this.playHistory\r\n      if (list.length === 0) {\r\n        return\r\n      }\r\n      list = list.map((song) => {\r\n        return new Song(song)\r\n      })\r\n      this.randomPlay({\r\n        list\r\n      })\r\n    },\r\n    ...mapActions([\r\n      'insertSong',\r\n      'randomPlay'\r\n    ])\r\n  },\r\n  components: {\r\n    Switches,\r\n    Scroll,\r\n    SongList,\r\n    NoResult\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\r\n@import '~common/stylus/variable'\r\n.user-center\r\n  position fixed\r\n  top 0\r\n  bottom 0\r\n  z-index 100\r\n  width 100%\r\n  background $color-background\r\n  &.slide-enter-active, &.slide-leave-active\r\n    transition all 0.3s\r\n  &.slide-enter, &.slide-leave-to\r\n    transform translate3d(100%, 0, 0)\r\n  .back\r\n    position absolute\r\n    top 0\r\n    left 6px\r\n    z-index 50\r\n    .icon-back\r\n      display block\r\n      padding 10px\r\n      font-size $font-size-large-x\r\n      color $color-theme\r\n  .switches-wrapper\r\n    margin 10px 0 30px 0\r\n  .play-btn\r\n    box-sizing border-box\r\n    width 135px\r\n    padding 7px 0\r\n    margin 0 auto\r\n    text-align center\r\n    border 1px solid $color-text-l\r\n    color $color-text-l\r\n    border-radius 100px\r\n    font-size 0\r\n    .icon-play\r\n      display inline-block\r\n      vertical-align middle\r\n      margin-right 6px\r\n      font-size $font-size-medium-x\r\n    .text\r\n      display inline-block\r\n      vertical-align middle\r\n      font-size $font-size-small\r\n  .list-wrapper\r\n    position absolute\r\n    top 110px\r\n    bottom 0\r\n    width 100%\r\n    .list-scroll\r\n      height 100%\r\n      overflow hidden\r\n      .list-inner\r\n        padding 20px 30px\r\n  .no-result-wrapper\r\n    position absolute\r\n    width 100%\r\n    top 50%\r\n    transform translateY(-50%)\r\n</style>"]}]}