{"remainingRequest":"E:\\vue-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-music\\src\\base\\base-video\\base-video.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-music\\src\\base\\base-video\\base-video.vue","mtime":1572600959575},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\r\nimport videojs from 'video.js'\r\n\r\nexport default {\r\n  props: {\r\n    vid: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    src: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    poster: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    playing: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initVideo()\r\n  },\r\n  methods: {\r\n    initVideo () {\r\n      const playState = this.playing\r\n      const VIDEO_WIDTH = window.innerWidth\r\n      const VIDEO_HEIGHT = 200\r\n\r\n      let that = this\r\n      let vid = this.vid\r\n      let OPTIONS = {\r\n        controls: true, // 控制条\r\n        preload: 'none', // 是否自动加载\r\n        width: VIDEO_WIDTH,\r\n        height: VIDEO_HEIGHT,\r\n        poster: this.poster,\r\n        sources: [\r\n          { src: this.src, type: 'video/mp4' }\r\n        ]\r\n      }\r\n      videojs(vid, OPTIONS, function () {\r\n        this.load()\r\n        this.on('play', function () {\r\n          console.log(123)\r\n          if (playState) {\r\n            this.pause()\r\n          }\r\n        })\r\n        this.on('pause', function () {\r\n          console.log(456)\r\n          if (!playState) {\r\n            this.play()\r\n            that._getPlayState(!playState)\r\n          }\r\n        })\r\n        this.on('ready', function () {\r\n          // if (!playState) {\r\n          //   this.play()\r\n          //   that._getPlayState(!playState)\r\n          // }\r\n        })\r\n      })\r\n    },\r\n    _getPlayState (state) {\r\n      this.$emit('playState', state)\r\n    }\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["base-video.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"base-video.vue","sourceRoot":"src/base/base-video","sourcesContent":["<template>\r\n  <div>\r\n    <video :id=\"vid\" class=\"video-js vjs-big-play-centered\"></video>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/ecmascript-6\">\r\nimport videojs from 'video.js'\r\n\r\nexport default {\r\n  props: {\r\n    vid: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    src: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    poster: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    playing: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initVideo()\r\n  },\r\n  methods: {\r\n    initVideo () {\r\n      const playState = this.playing\r\n      const VIDEO_WIDTH = window.innerWidth\r\n      const VIDEO_HEIGHT = 200\r\n\r\n      let that = this\r\n      let vid = this.vid\r\n      let OPTIONS = {\r\n        controls: true, // 控制条\r\n        preload: 'none', // 是否自动加载\r\n        width: VIDEO_WIDTH,\r\n        height: VIDEO_HEIGHT,\r\n        poster: this.poster,\r\n        sources: [\r\n          { src: this.src, type: 'video/mp4' }\r\n        ]\r\n      }\r\n      videojs(vid, OPTIONS, function () {\r\n        this.load()\r\n        this.on('play', function () {\r\n          console.log(123)\r\n          if (playState) {\r\n            this.pause()\r\n          }\r\n        })\r\n        this.on('pause', function () {\r\n          console.log(456)\r\n          if (!playState) {\r\n            this.play()\r\n            that._getPlayState(!playState)\r\n          }\r\n        })\r\n        this.on('ready', function () {\r\n          // if (!playState) {\r\n          //   this.play()\r\n          //   that._getPlayState(!playState)\r\n          // }\r\n        })\r\n      })\r\n    },\r\n    _getPlayState (state) {\r\n      this.$emit('playState', state)\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\"></style>"]}]}