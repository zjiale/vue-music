{"remainingRequest":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js!E:\\vue-music\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\vue-music\\src\\store\\actions.js","dependencies":[{"path":"E:\\vue-music\\src\\store\\actions.js","mtime":1571824179668},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport * as types from \"./mutation-types\";\nimport { playMode } from 'common/js/config';\nimport { shuffle } from 'common/js/util';\nimport { saveSearch, deleteSearch, clearSearch, savePlay, saveFavorite, deleteFavorite } from 'common/js/cache';\n\nfunction findIndex(list, song) {\n  return list.findIndex(function (item) {\n    return item.id === song.id;\n  });\n}\n\nexport var selectPlay = function selectPlay(_ref, _ref2) {\n  var commit = _ref.commit,\n      state = _ref.state;\n  var list = _ref2.list,\n      index = _ref2.index;\n  commit(types.SET_SEQUENCE_LIST, list);\n\n  if (state.mode === playMode.random) {\n    var randomList = shuffle(list);\n    commit(types.SET_PLAYLIST, randomList);\n    index = findIndex(randomList, list[index]);\n  } else {\n    commit(types.SET_PLAYLIST, list);\n  }\n\n  commit(types.SET_CURRENT_INDEX, index);\n  commit(types.SET_FULL_SCREEN, true);\n  commit(types.SET_PLAYING_STATE, true);\n};\nexport var randomPlay = function randomPlay(_ref3, _ref4) {\n  var commit = _ref3.commit;\n  var list = _ref4.list;\n  commit(types.SET_PLAY_MODE, playMode.random);\n  commit(types.SET_SEQUENCE_LIST, list);\n  var randomList = shuffle(list);\n  commit(types.SET_PLAYLIST, randomList);\n  commit(types.SET_CURRENT_INDEX, 0);\n  commit(types.SET_FULL_SCREEN, true);\n  commit(types.SET_PLAYING_STATE, true);\n};\nexport var insertSong = function insertSong(_ref5, song) {\n  var commit = _ref5.commit,\n      state = _ref5.state;\n  var playlist = state.playlist.slice();\n  var sequenceList = state.sequenceList.slice();\n  var currentIndex = state.currentIndex; // 记录当前歌曲\n\n  var currentSong = playlist[currentIndex]; // 查找当前列表中是否有待插入得歌曲并返回其索引\n\n  var fpIndex = findIndex(playlist, song); // 因为是插入歌曲，所以索引+1\n\n  currentIndex++; // 插入这首歌到当前索引位置\n\n  playlist.splice(currentIndex, 0, song); // 如果已经包含了这首歌\n\n  if (fpIndex > -1) {\n    // 如果当前插入得序号大于列表中得序号\n    if (currentIndex > fpIndex) {\n      playlist.splice(fpIndex, 1);\n      currentIndex--;\n    } else {\n      playlist.splice(fpIndex + 1, 1);\n    }\n  }\n\n  var currentSIndex = findIndex(sequenceList, currentSong) + 1;\n  var fsIndex = findIndex(sequenceList, song);\n  sequenceList.splice(currentSIndex, 0, song);\n\n  if (fsIndex > -1) {\n    if (currentSIndex > fsIndex) {\n      sequenceList.splice(fsIndex, 1);\n    } else {\n      sequenceList.splice(fsIndex + 1, 1);\n    }\n  }\n\n  commit(types.SET_PLAYLIST, playlist);\n  commit(types.SET_SEQUENCE_LIST, sequenceList);\n  commit(types.SET_CURRENT_INDEX, currentIndex);\n  commit(types.SET_FULL_SCREEN, true);\n  commit(types.SET_PLAYING_STATE, true);\n};\nexport var saveSearchHistory = function saveSearchHistory(_ref6, query) {\n  var commit = _ref6.commit;\n  commit(types.SET_SEARCH_HISTORY, saveSearch(query));\n};\nexport var deleteSearchHistory = function deleteSearchHistory(_ref7, query) {\n  var commit = _ref7.commit;\n  commit(types.SET_SEARCH_HISTORY, deleteSearch(query));\n};\nexport var clearSearchHistory = function clearSearchHistory(_ref8) {\n  var commit = _ref8.commit;\n  commit(types.SET_SEARCH_HISTORY, clearSearch());\n};\nexport var deleteSong = function deleteSong(_ref9, song) {\n  var commit = _ref9.commit,\n      state = _ref9.state;\n  var playlist = state.playlist.slice();\n  var sequenceList = state.sequenceList.slice();\n  var currentIndex = state.currentIndex;\n  var pIndex = findIndex(playlist, song);\n  playlist.splice(pIndex, 1);\n  var sIndex = findIndex(sequenceList, song);\n  sequenceList.splice(sIndex, 1);\n\n  if (currentIndex > pIndex || currentIndex === playlist.length) {\n    currentIndex--;\n  }\n\n  commit(types.SET_PLAYLIST, playlist);\n  commit(types.SET_SEQUENCE_LIST, sequenceList);\n  commit(types.SET_CURRENT_INDEX, currentIndex);\n\n  if (!playlist.length) {\n    commit(types.SET_PLAYING_STATE, false);\n  }\n};\nexport var deleteSongList = function deleteSongList(_ref10) {\n  var commit = _ref10.commit;\n  commit(types.SET_PLAYLIST, []);\n  commit(types.SET_SEQUENCE_LIST, []);\n  commit(types.SET_CURRENT_INDEX, -1);\n  commit(types.SET_PLAYING_STATE, false);\n};\nexport var savePlayHistory = function savePlayHistory(_ref11, song) {\n  var commit = _ref11.commit;\n  commit(types.SET_PLAY_HISTORY, savePlay(song));\n};\nexport var saveFavoriteList = function saveFavoriteList(_ref12, song) {\n  var commit = _ref12.commit;\n  commit(types.SET_FAVORITE_LIST, saveFavorite(song));\n};\nexport var deleteFavoriteList = function deleteFavoriteList(_ref13, song) {\n  var commit = _ref13.commit;\n  commit(types.SET_FAVORITE_LIST, deleteFavorite(song));\n};",{"version":3,"sources":["E:\\vue-music\\src\\store\\actions.js"],"names":["types","playMode","shuffle","saveSearch","deleteSearch","clearSearch","savePlay","saveFavorite","deleteFavorite","findIndex","list","song","item","id","selectPlay","commit","state","index","SET_SEQUENCE_LIST","mode","random","randomList","SET_PLAYLIST","SET_CURRENT_INDEX","SET_FULL_SCREEN","SET_PLAYING_STATE","randomPlay","SET_PLAY_MODE","insertSong","playlist","slice","sequenceList","currentIndex","currentSong","fpIndex","splice","currentSIndex","fsIndex","saveSearchHistory","query","SET_SEARCH_HISTORY","deleteSearchHistory","clearSearchHistory","deleteSong","pIndex","sIndex","length","deleteSongList","savePlayHistory","SET_PLAY_HISTORY","saveFavoriteList","SET_FAVORITE_LIST","deleteFavoriteList"],"mappings":"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","sourcesContent":["import * as types from './mutation-types'\r\nimport {\r\n  playMode\r\n} from 'common/js/config'\r\nimport {\r\n  shuffle\r\n} from 'common/js/util'\r\nimport {\r\n  saveSearch,\r\n  deleteSearch,\r\n  clearSearch,\r\n  savePlay,\r\n  saveFavorite,\r\n  deleteFavorite\r\n} from 'common/js/cache'\r\n\r\nfunction findIndex(list, song) {\r\n  return list.findIndex((item) => {\r\n    return item.id === song.id\r\n  })\r\n}\r\n\r\nexport const selectPlay = function ({\r\n  commit,\r\n  state\r\n}, {\r\n  list,\r\n  index\r\n}) {\r\n  commit(types.SET_SEQUENCE_LIST, list)\r\n  if (state.mode === playMode.random) {\r\n    let randomList = shuffle(list)\r\n    commit(types.SET_PLAYLIST, randomList)\r\n    index = findIndex(randomList, list[index])\r\n  } else {\r\n    commit(types.SET_PLAYLIST, list)\r\n  }\r\n  commit(types.SET_CURRENT_INDEX, index)\r\n  commit(types.SET_FULL_SCREEN, true)\r\n  commit(types.SET_PLAYING_STATE, true)\r\n}\r\n\r\nexport const randomPlay = function ({\r\n  commit\r\n}, {\r\n  list\r\n}) {\r\n  commit(types.SET_PLAY_MODE, playMode.random)\r\n  commit(types.SET_SEQUENCE_LIST, list)\r\n  let randomList = shuffle(list)\r\n  commit(types.SET_PLAYLIST, randomList)\r\n  commit(types.SET_CURRENT_INDEX, 0)\r\n  commit(types.SET_FULL_SCREEN, true)\r\n  commit(types.SET_PLAYING_STATE, true)\r\n}\r\n\r\nexport const insertSong = function ({\r\n  commit,\r\n  state\r\n}, song) {\r\n  let playlist = state.playlist.slice()\r\n  let sequenceList = state.sequenceList.slice()\r\n  let currentIndex = state.currentIndex\r\n  // 记录当前歌曲\r\n  let currentSong = playlist[currentIndex]\r\n  // 查找当前列表中是否有待插入得歌曲并返回其索引\r\n  let fpIndex = findIndex(playlist, song)\r\n  // 因为是插入歌曲，所以索引+1\r\n  currentIndex++\r\n  // 插入这首歌到当前索引位置\r\n  playlist.splice(currentIndex, 0, song)\r\n  // 如果已经包含了这首歌\r\n  if (fpIndex > -1) {\r\n    // 如果当前插入得序号大于列表中得序号\r\n    if (currentIndex > fpIndex) {\r\n      playlist.splice(fpIndex, 1)\r\n      currentIndex--\r\n    } else {\r\n      playlist.splice(fpIndex + 1, 1)\r\n    }\r\n  }\r\n\r\n  let currentSIndex = findIndex(sequenceList, currentSong) + 1\r\n\r\n  let fsIndex = findIndex(sequenceList, song)\r\n\r\n  sequenceList.splice(currentSIndex, 0, song)\r\n\r\n  if (fsIndex > -1) {\r\n    if (currentSIndex > fsIndex) {\r\n      sequenceList.splice(fsIndex, 1)\r\n    } else {\r\n      sequenceList.splice(fsIndex + 1, 1)\r\n    }\r\n  }\r\n\r\n  commit(types.SET_PLAYLIST, playlist)\r\n  commit(types.SET_SEQUENCE_LIST, sequenceList)\r\n  commit(types.SET_CURRENT_INDEX, currentIndex)\r\n  commit(types.SET_FULL_SCREEN, true)\r\n  commit(types.SET_PLAYING_STATE, true)\r\n}\r\n\r\nexport const saveSearchHistory = function ({\r\n  commit\r\n}, query) {\r\n  commit(types.SET_SEARCH_HISTORY, saveSearch(query))\r\n}\r\n\r\nexport const deleteSearchHistory = function ({\r\n  commit\r\n}, query) {\r\n  commit(types.SET_SEARCH_HISTORY, deleteSearch(query))\r\n}\r\n\r\nexport const clearSearchHistory = function ({\r\n  commit\r\n}) {\r\n  commit(types.SET_SEARCH_HISTORY, clearSearch())\r\n}\r\n\r\nexport const deleteSong = function ({\r\n  commit,\r\n  state\r\n}, song) {\r\n  let playlist = state.playlist.slice()\r\n  let sequenceList = state.sequenceList.slice()\r\n  let currentIndex = state.currentIndex\r\n  let pIndex = findIndex(playlist, song)\r\n  playlist.splice(pIndex, 1)\r\n  let sIndex = findIndex(sequenceList, song)\r\n  sequenceList.splice(sIndex, 1)\r\n\r\n  if (currentIndex > pIndex || currentIndex === playlist.length) {\r\n    currentIndex--\r\n  }\r\n\r\n  commit(types.SET_PLAYLIST, playlist)\r\n  commit(types.SET_SEQUENCE_LIST, sequenceList)\r\n  commit(types.SET_CURRENT_INDEX, currentIndex)\r\n\r\n  if (!playlist.length) {\r\n    commit(types.SET_PLAYING_STATE, false)\r\n  }\r\n}\r\n\r\nexport const deleteSongList = function ({\r\n  commit\r\n}) {\r\n  commit(types.SET_PLAYLIST, [])\r\n  commit(types.SET_SEQUENCE_LIST, [])\r\n  commit(types.SET_CURRENT_INDEX, -1)\r\n  commit(types.SET_PLAYING_STATE, false)\r\n}\r\n\r\nexport const savePlayHistory = function ({\r\n  commit\r\n}, song) {\r\n  commit(types.SET_PLAY_HISTORY, savePlay(song))\r\n}\r\n\r\nexport const saveFavoriteList = function ({\r\n  commit\r\n}, song) {\r\n  commit(types.SET_FAVORITE_LIST, saveFavorite(song))\r\n}\r\n\r\nexport const deleteFavoriteList = function ({\r\n  commit\r\n}, song) {\r\n  commit(types.SET_FAVORITE_LIST, deleteFavorite(song))\r\n}\r\n"]}]}