{"remainingRequest":"E:\\vue-music\\node_modules\\thread-loader\\dist\\cjs.js!E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js!E:\\vue-music\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\vue-music\\src\\api\\search.js","dependencies":[{"path":"E:\\vue-music\\src\\api\\search.js","mtime":1571280377773},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { commonParams, options } from \"./config\";\nimport jsonp from 'common/js/jsonp';\nimport axios from 'axios';\nexport function getHotKey() {\n  var url = 'https://c.y.qq.com/splcloud/fcgi-bin/gethotkey.fcg';\n  var data = Object.assign({}, commonParams, {\n    g_tk: 5381,\n    platform: 'h5',\n    needNewCode: 1\n  });\n  return jsonp(url, data, options);\n}\nexport function search(query, page, zhida, perpage) {\n  var url = '/api/search';\n  var data = Object.assign({}, commonParams, {\n    w: query,\n    p: page,\n    catZhida: zhida ? 1 : 0,\n    perpage: perpage,\n    n: perpage,\n    zhidaqu: 1,\n    t: 0,\n    flag: 1,\n    ie: 'utf-8',\n    sem: 1,\n    aggr: 0,\n    remoteplace: 'txt.mqq.all',\n    uid: 0,\n    needNewCode: 1,\n    platform: 'h5'\n  });\n  return axios.get(url, {\n    params: data\n  }).then(function (res) {\n    return Promise.resolve(res.data);\n  });\n}",{"version":3,"sources":["E:\\vue-music\\src\\api\\search.js"],"names":["commonParams","options","jsonp","axios","getHotKey","url","data","Object","assign","g_tk","platform","needNewCode","search","query","page","zhida","perpage","w","p","catZhida","n","zhidaqu","t","flag","ie","sem","aggr","remoteplace","uid","get","params","then","res","Promise","resolve"],"mappings":"AAAA,SACEA,YADF,EAEEC,OAFF;AAIA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1B,MAAMC,GAAG,GAAG,oDAAZ;AAEA,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,YAAlB,EAAgC;AAC3CS,IAAAA,IAAI,EAAE,IADqC;AAE3CC,IAAAA,QAAQ,EAAE,IAFiC;AAG3CC,IAAAA,WAAW,EAAE;AAH8B,GAAhC,CAAb;AAMA,SAAOT,KAAK,CAACG,GAAD,EAAMC,IAAN,EAAYL,OAAZ,CAAZ;AACD;AAED,OAAO,SAASW,MAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6C;AAClD,MAAMX,GAAG,GAAG,aAAZ;AAEA,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,YAAlB,EAAgC;AAC3CiB,IAAAA,CAAC,EAAEJ,KADwC;AAE3CK,IAAAA,CAAC,EAAEJ,IAFwC;AAG3CK,IAAAA,QAAQ,EAAEJ,KAAK,GAAG,CAAH,GAAO,CAHqB;AAI3CC,IAAAA,OAAO,EAAPA,OAJ2C;AAK3CI,IAAAA,CAAC,EAAEJ,OALwC;AAM3CK,IAAAA,OAAO,EAAE,CANkC;AAO3CC,IAAAA,CAAC,EAAE,CAPwC;AAQ3CC,IAAAA,IAAI,EAAE,CARqC;AAS3CC,IAAAA,EAAE,EAAE,OATuC;AAU3CC,IAAAA,GAAG,EAAE,CAVsC;AAW3CC,IAAAA,IAAI,EAAE,CAXqC;AAY3CC,IAAAA,WAAW,EAAE,aAZ8B;AAa3CC,IAAAA,GAAG,EAAE,CAbsC;AAc3CjB,IAAAA,WAAW,EAAE,CAd8B;AAe3CD,IAAAA,QAAQ,EAAE;AAfiC,GAAhC,CAAb;AAkBA,SAAOP,KAAK,CAAC0B,GAAN,CAAUxB,GAAV,EAAe;AACpByB,IAAAA,MAAM,EAAExB;AADY,GAAf,EAEJyB,IAFI,CAEC,UAACC,GAAD,EAAS;AACf,WAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAAC1B,IAApB,CAAP;AACD,GAJM,CAAP;AAKD","sourcesContent":["import {\r\n  commonParams,\r\n  options\r\n} from './config'\r\nimport jsonp from 'common/js/jsonp'\r\nimport axios from 'axios'\r\n\r\nexport function getHotKey() {\r\n  const url = 'https://c.y.qq.com/splcloud/fcgi-bin/gethotkey.fcg'\r\n\r\n  const data = Object.assign({}, commonParams, {\r\n    g_tk: 5381,\r\n    platform: 'h5',\r\n    needNewCode: 1\r\n  })\r\n\r\n  return jsonp(url, data, options)\r\n}\r\n\r\nexport function search(query, page, zhida, perpage) {\r\n  const url = '/api/search'\r\n\r\n  const data = Object.assign({}, commonParams, {\r\n    w: query,\r\n    p: page,\r\n    catZhida: zhida ? 1 : 0,\r\n    perpage,\r\n    n: perpage,\r\n    zhidaqu: 1,\r\n    t: 0,\r\n    flag: 1,\r\n    ie: 'utf-8',\r\n    sem: 1,\r\n    aggr: 0,\r\n    remoteplace: 'txt.mqq.all',\r\n    uid: 0,\r\n    needNewCode: 1,\r\n    platform: 'h5'\r\n  })\r\n\r\n  return axios.get(url, {\r\n    params: data\r\n  }).then((res) => {\r\n    return Promise.resolve(res.data)\r\n  })\r\n}\r\n"]}]}