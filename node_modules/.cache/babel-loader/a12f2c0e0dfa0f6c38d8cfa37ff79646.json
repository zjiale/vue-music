{"remainingRequest":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js!E:\\vue-music\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\vue-music\\src\\common\\js\\cache.js","dependencies":[{"path":"E:\\vue-music\\src\\common\\js\\cache.js","mtime":1571822699723},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport storage from 'good-storage';\nvar SEARCH_KEY = '__search__';\nvar SEARCH_MAX_LENGTH = 15;\nvar PLAY_KEY = '__play__';\nvar PLAY_MAX_LENGTH = 200;\nvar FAVORITE_KEY = '__favorite__';\nvar FAVORITE_MAX_LENGTH = 200;\n\nfunction insertArray(arr, val, compare, maxLen) {\n  var index = arr.findIndex(compare);\n\n  if (index === 0) {\n    return;\n  }\n\n  if (index > 0) {\n    arr.splice(index, 1);\n  }\n\n  arr.unshift(val);\n\n  if (maxLen && arr.length > maxLen) {\n    arr.pop();\n  }\n}\n\nfunction deleteFromArray(arr, compare) {\n  var index = arr.findIndex(compare);\n\n  if (index > -1) {\n    arr.splice(index, 1);\n  }\n}\n\nexport function saveSearch(query) {\n  var searches = storage.get(SEARCH_KEY, []);\n  insertArray(searches, query, function (item) {\n    return item === query;\n  }, SEARCH_MAX_LENGTH);\n  storage.set(SEARCH_KEY, searches);\n  return searches;\n}\nexport function loadSearch() {\n  return storage.get(SEARCH_KEY, []);\n}\nexport function deleteSearch(query) {\n  var searches = storage.get(SEARCH_KEY, []);\n  deleteFromArray(searches, function (item) {\n    return item === query;\n  });\n  storage.set(SEARCH_KEY, searches);\n  return searches;\n}\nexport function clearSearch() {\n  storage.remove(SEARCH_KEY);\n  return [];\n}\nexport function savePlay(song) {\n  var songs = storage.get(PLAY_KEY, []);\n  insertArray(songs, song, function (item) {\n    return item.id === song.id;\n  }, PLAY_MAX_LENGTH);\n  storage.set(PLAY_KEY, songs);\n  return songs;\n}\nexport function loadPlay() {\n  return storage.get(PLAY_KEY, []);\n}\nexport function saveFavorite(song) {\n  var songs = storage.get(FAVORITE_KEY, []);\n  insertArray(songs, song, function (item) {\n    return song.id === item.id;\n  }, FAVORITE_MAX_LENGTH);\n  storage.set(FAVORITE_KEY, songs);\n  return songs;\n}\nexport function deleteFavorite(song) {\n  var songs = storage.get(FAVORITE_KEY, []);\n  deleteFromArray(songs, function (item) {\n    return song.id === item.id;\n  });\n  storage.set(FAVORITE_KEY, songs);\n  return songs;\n}\nexport function loadFavorite() {\n  return storage.get(FAVORITE_KEY, []);\n}",{"version":3,"sources":["E:\\vue-music\\src\\common\\js\\cache.js"],"names":["storage","SEARCH_KEY","SEARCH_MAX_LENGTH","PLAY_KEY","PLAY_MAX_LENGTH","FAVORITE_KEY","FAVORITE_MAX_LENGTH","insertArray","arr","val","compare","maxLen","index","findIndex","splice","unshift","length","pop","deleteFromArray","saveSearch","query","searches","get","item","set","loadSearch","deleteSearch","clearSearch","remove","savePlay","song","songs","id","loadPlay","saveFavorite","deleteFavorite","loadFavorite"],"mappings":"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","sourcesContent":["import storage from 'good-storage'\r\n\r\nconst SEARCH_KEY = '__search__'\r\nconst SEARCH_MAX_LENGTH = 15\r\n\r\nconst PLAY_KEY = '__play__'\r\nconst PLAY_MAX_LENGTH = 200\r\n\r\nconst FAVORITE_KEY = '__favorite__'\r\nconst FAVORITE_MAX_LENGTH = 200\r\n\r\nfunction insertArray(arr, val, compare, maxLen) {\r\n  const index = arr.findIndex(compare)\r\n  if (index === 0) {\r\n    return\r\n  }\r\n  if (index > 0) {\r\n    arr.splice(index, 1)\r\n  }\r\n  arr.unshift(val)\r\n  if (maxLen && arr.length > maxLen) {\r\n    arr.pop()\r\n  }\r\n}\r\n\r\nfunction deleteFromArray(arr, compare) {\r\n  const index = arr.findIndex(compare)\r\n  if (index > -1) {\r\n    arr.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport function saveSearch(query) {\r\n  let searches = storage.get(SEARCH_KEY, [])\r\n  insertArray(searches, query, (item) => {\r\n    return item === query\r\n  }, SEARCH_MAX_LENGTH)\r\n  storage.set(SEARCH_KEY, searches)\r\n  return searches\r\n}\r\n\r\nexport function loadSearch() {\r\n  return storage.get(SEARCH_KEY, [])\r\n}\r\n\r\nexport function deleteSearch(query) {\r\n  let searches = storage.get(SEARCH_KEY, [])\r\n  deleteFromArray(searches, (item) => {\r\n    return item === query\r\n  })\r\n  storage.set(SEARCH_KEY, searches)\r\n  return searches\r\n}\r\n\r\nexport function clearSearch() {\r\n  storage.remove(SEARCH_KEY)\r\n  return []\r\n}\r\n\r\nexport function savePlay(song) {\r\n  let songs = storage.get(PLAY_KEY, [])\r\n  insertArray(songs, song, (item) => {\r\n    return item.id === song.id\r\n  }, PLAY_MAX_LENGTH)\r\n  storage.set(PLAY_KEY, songs)\r\n  return songs\r\n}\r\n\r\nexport function loadPlay() {\r\n  return storage.get(PLAY_KEY, [])\r\n}\r\n\r\nexport function saveFavorite(song) {\r\n  let songs = storage.get(FAVORITE_KEY, [])\r\n  insertArray(songs, song, (item) => {\r\n    return song.id === item.id\r\n  }, FAVORITE_MAX_LENGTH)\r\n  storage.set(FAVORITE_KEY, songs)\r\n  return songs\r\n}\r\n\r\nexport function deleteFavorite(song) {\r\n  let songs = storage.get(FAVORITE_KEY, [])\r\n  deleteFromArray(songs, (item) => {\r\n    return song.id === item.id\r\n  })\r\n  storage.set(FAVORITE_KEY, songs)\r\n  return songs\r\n}\r\n\r\nexport function loadFavorite() {\r\n  return storage.get(FAVORITE_KEY, [])\r\n}\r\n"]}]}