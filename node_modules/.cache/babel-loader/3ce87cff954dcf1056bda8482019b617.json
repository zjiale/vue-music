{"remainingRequest":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js!E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-music\\src\\components\\player\\player.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-music\\src\\components\\player\\player.vue","mtime":1571992431383},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"E:\\\\vue-music\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations, mapActions } from 'vuex';\nimport animations from 'create-keyframe-animation';\nimport { prefixStyle } from 'common/js/dom';\nimport ProgressBar from 'base/progress-bar/progress-bar';\nimport ProgressCircle from 'base/progress-circle/progress-circle';\nimport { playMode } from 'common/js/config';\nimport Lyric from 'lyric-parser';\nimport Scroll from 'base/scroll/scroll';\nimport Playlist from 'components/playlist/playlist';\nimport { playerMixin } from 'common/js/mixin';\nvar transform = prefixStyle('transform');\nvar transitionDuration = prefixStyle('transitionDuration');\nexport default {\n  mixins: [playerMixin],\n  data: function data() {\n    return {\n      songReady: false,\n      currentTime: 0,\n      radius: 32,\n      currentLyric: null,\n      currentLineNum: 0,\n      currentShow: 'cd',\n      playingLyric: ''\n    };\n  },\n  computed: _objectSpread({\n    cdCls: function cdCls() {\n      return this.playing ? 'play' : 'play pause';\n    },\n    playIcon: function playIcon() {\n      return this.playing ? 'icon-pause' : 'icon-play';\n    },\n    miniIcon: function miniIcon() {\n      return this.playing ? 'icon-pause-mini' : 'icon-play-mini';\n    },\n    disableCls: function disableCls() {\n      return this.songReady ? '' : 'disable';\n    },\n    percent: function percent() {\n      return this.currentTime / this.currentSong.duration;\n    }\n  }, mapGetters(['fullScreen', 'playing', 'currentIndex'])),\n  created: function created() {\n    this.touch = {};\n  },\n  methods: _objectSpread({\n    back: function back() {\n      this.setFullScreen(false);\n    },\n    open: function open() {\n      this.setFullScreen(true);\n    },\n    enter: function enter(el, done) {\n      var _this$_getPosAndScale = this._getPosAndScale(),\n          x = _this$_getPosAndScale.x,\n          y = _this$_getPosAndScale.y,\n          scale = _this$_getPosAndScale.scale;\n\n      var animation = {\n        // 设置百分比下的动画\n        0: {\n          transform: \"translate3d(\".concat(x, \"px,\").concat(y, \"px,0) scale(\").concat(scale, \")\")\n        },\n        60: {\n          transform: \"translate3d(0,0,0) scale(1.1)\"\n        },\n        100: {\n          transform: \"translate3d(0,0,0) scale(1)\"\n        }\n      };\n      animations.registerAnimation({\n        name: 'move',\n        animation: animation,\n        presets: {\n          duration: 400,\n          easing: 'linear'\n        }\n      });\n      animations.runAnimation(this.$refs.cdWrapper, 'move', done);\n    },\n    afterEnter: function afterEnter() {\n      animations.unregisterAnimation('move');\n      this.$refs.cdWrapper.style.animation = '';\n    },\n    leave: function leave(el, done) {\n      this.$refs.cdWrapper.style.transition = 'all 0.4s';\n\n      var _this$_getPosAndScale2 = this._getPosAndScale(),\n          x = _this$_getPosAndScale2.x,\n          y = _this$_getPosAndScale2.y,\n          scale = _this$_getPosAndScale2.scale;\n\n      this.$refs.cdWrapper.style[transform] = \"translate3d(\".concat(x, \"px,\").concat(y, \"px,0) scale(\").concat(scale, \")\");\n      this.$refs.cdWrapper.addEventListener('transitionend', done);\n    },\n    afterLeave: function afterLeave() {\n      this.$refs.cdWrapper.style.transition = '';\n      this.$refs.cdWrapper.style[transform] = '';\n    },\n    togglePlaying: function togglePlaying() {\n      if (!this.songReady) {\n        return;\n      }\n\n      this.setPlayingState(!this.playing);\n\n      if (this.currentLyric) {\n        this.currentLyric.togglePlay();\n      }\n    },\n    end: function end() {\n      if (this.mode === playMode.loop) {\n        this.loop();\n      } else {\n        this.next();\n      }\n    },\n    loop: function loop() {\n      this.$refs.audio.currentTime = 0;\n      this.$refs.audio.play();\n\n      if (this.currentLyric) {\n        this.currentLyric.seek();\n      }\n    },\n    next: function next() {\n      if (!this.songReady) {\n        return;\n      }\n\n      if (this.playlist.length === 1) {\n        this.loop();\n        return;\n      } else {\n        var index = this.currentIndex + 1;\n\n        if (index === this.playlist.length) {\n          index = 0;\n        }\n\n        this.setCurrentIndex(index);\n\n        if (!this.playing) {\n          this.togglePlaying();\n        }\n      }\n\n      this.songReady = false;\n    },\n    prev: function prev() {\n      if (!this.songReady) {\n        return;\n      }\n\n      if (this.playlist.length === 1) {\n        this.loop();\n        return;\n      } else {\n        var index = this.currentIndex - 1;\n\n        if (index === -1) {\n          index = this.playlist.length - 1;\n        }\n\n        this.setCurrentIndex(index);\n\n        if (!this.playing) {\n          this.togglePlaying();\n        }\n      }\n\n      this.songReady = false;\n    },\n    ready: function ready() {\n      this.songReady = true;\n      this.savePlayHistory(this.currentSong);\n    },\n    error: function error() {\n      this.songReady = true;\n    },\n    updateTime: function updateTime(e) {\n      this.currentTime = e.target.currentTime;\n    },\n    format: function format(interval) {\n      interval = interval | 0; // 正数向下取整，相当于调用math.floor\n\n      var minute = interval / 60 | 0;\n\n      var second = this._pad(interval % 60);\n\n      return \"\".concat(minute, \":\").concat(second);\n    },\n    onProgressBarChange: function onProgressBarChange(percent) {\n      var currentTime = this.currentSong.duration * percent;\n      this.$refs.audio.currentTime = currentTime;\n\n      if (!this.playing) {\n        this.togglePlaying();\n      }\n\n      if (this.currentLyric) {\n        this.currentLyric.seek(currentTime * 1000);\n      }\n    },\n    getLyric: function getLyric() {\n      var _this = this;\n\n      this.currentSong.getLyric().then(function (lyric) {\n        if (_this.currentSong.lyric !== lyric) {\n          return;\n        }\n\n        _this.currentLyric = new Lyric(lyric, _this.handleLyric);\n\n        if (_this.playing) {\n          _this.currentLyric.play();\n        } // console.log(this.currentLyric)\n\n      }).catch(function () {\n        _this.currentLyric = null;\n        _this.playingLyric = '';\n        _this.currentLineNum = 0;\n      });\n    },\n    handleLyric: function handleLyric(_ref) {\n      var lineNum = _ref.lineNum,\n          txt = _ref.txt;\n      this.currentLineNum = lineNum;\n\n      if (lineNum > 5) {\n        var lineEl = this.$refs.lyricLine[lineNum - 5];\n        this.$refs.lyricList.scrollToElement(lineEl, 1000);\n      } else {\n        this.$refs.lyricList.scrollToElement(0, 0, 1000);\n      }\n\n      this.playingLyric = txt;\n    },\n    showPlaylist: function showPlaylist() {\n      this.$refs.playlist.show();\n    },\n    middleTouchStart: function middleTouchStart(e) {\n      this.touch.initiated = true;\n      var touch = e.touches[0];\n      this.touch.startX = touch.pageX;\n      this.touch.startY = touch.pageY;\n    },\n    middleTouchMove: function middleTouchMove(e) {\n      if (!this.touch.initiated) {\n        return;\n      }\n\n      var touch = e.touches[0];\n      var deltaX = touch.pageX - this.touch.startX;\n      var deltaY = touch.pageY - this.touch.startY;\n\n      if (Math.abs(deltaY) > Math.abs(deltaX)) {\n        return;\n      }\n\n      var left = this.currentShow === 'cd' ? 0 : -window.innerWidth;\n      var offsetWidth = Math.min(0, Math.max(-window.innerWidth, left + deltaX));\n      this.touch.percent = Math.abs(offsetWidth / window.innerWidth);\n      this.$refs.lyricList.$el.style[transform] = \"translate3d(\".concat(offsetWidth, \"px,0,0)\");\n      this.$refs.lyricList.$el.style[transitionDuration] = 0;\n      this.$refs.middleL.style.opacity = 1 - this.touch.percent;\n      this.$refs.middleL.style[transitionDuration] = 0;\n    },\n    middleTouchEnd: function middleTouchEnd(e) {\n      var offsetWidth;\n      var opacity;\n\n      if (this.currentShow === 'cd') {\n        if (this.touch.percent > 0.1) {\n          offsetWidth = -window.innerWidth;\n          opacity = 0;\n          this.currentShow = 'lyric';\n        } else {\n          offsetWidth = 0;\n          opacity = 1;\n        }\n      } else {\n        if (this.touch.percent < 0.9) {\n          offsetWidth = 0;\n          opacity = 1;\n          this.currentShow = 'cd';\n        } else {\n          offsetWidth = -window.innerWidth;\n          opacity = 0;\n        }\n      }\n\n      var time = 300;\n      this.$refs.lyricList.$el.style[transform] = \"translate3d(\".concat(offsetWidth, \"px,0,0)\");\n      this.$refs.lyricList.$el.style[transitionDuration] = \"\".concat(time, \"ms\");\n      this.$refs.middleL.style.opacity = opacity;\n      this.$refs.middleL.style[transitionDuration] = \"\".concat(time, \"ms\");\n    },\n    _pad: function _pad(num) {\n      var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      // 补位,如果秒为取整不够2位，则补0，如果大于则直接返回\n      var len = num.toString().length;\n\n      while (len < n) {\n        num = '0' + num;\n        len++;\n      }\n\n      return num;\n    },\n    _getPosAndScale: function _getPosAndScale() {\n      var targetWidth = 40;\n      var paddingLeft = 40;\n      var paddingBottom = 30;\n      var paddingTop = 80;\n      var width = window.innerWidth * 0.8;\n      var scale = targetWidth / width;\n      var x = -(window.innerWidth / 2 - paddingLeft);\n      var y = window.innerHeight - paddingTop - width / 2 - paddingBottom;\n      return {\n        x: x,\n        y: y,\n        scale: scale\n      };\n    }\n  }, mapMutations({\n    setFullScreen: 'SET_FULL_SCREEN'\n  }), {}, mapActions(['savePlayHistory'])),\n  watch: {\n    currentSong: function currentSong(newSong, oldSong) {\n      var _this2 = this;\n\n      if (!newSong.id || !newSong.url || newSong.id === oldSong.id) {\n        return;\n      }\n\n      this.songReady = false; // this.canLyricPlay = false\n\n      if (this.currentLyric) {\n        this.currentLyric.stop(); // 重置为null\n\n        this.currentLyric = null;\n        this.currentTime = 0;\n        this.playingLyric = '';\n        this.currentLineNum = 0;\n      }\n\n      this.$refs.audio.src = newSong.url;\n      this.$refs.audio.play(); // 若歌曲 5s 未播放，则认为超时，修改状态确保可以切换歌曲。\n\n      clearTimeout(this.timer);\n      this.timer = setTimeout(function () {\n        _this2.songReady = true;\n      }, 1000);\n      this.getLyric();\n    },\n    playing: function playing(newPlaying) {\n      var audio = this.$refs.audio;\n      this.$nextTick(function () {\n        newPlaying ? audio.play() : audio.pause();\n      });\n    }\n  },\n  components: {\n    ProgressBar: ProgressBar,\n    ProgressCircle: ProgressCircle,\n    Scroll: Scroll,\n    Playlist: Playlist\n  }\n};",{"version":3,"sources":["player.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA,SAAA,UAAA,EAAA,YAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,UAAA,MAAA,2BAAA;AACA,SAAA,WAAA,QAAA,eAAA;AACA,OAAA,WAAA,MAAA,gCAAA;AACA,OAAA,cAAA,MAAA,sCAAA;AACA,SAAA,QAAA,QAAA,kBAAA;AACA,OAAA,KAAA,MAAA,cAAA;AACA,OAAA,MAAA,MAAA,oBAAA;AACA,OAAA,QAAA,MAAA,8BAAA;AACA,SAAA,WAAA,QAAA,iBAAA;AAEA,IAAA,SAAA,GAAA,WAAA,CAAA,WAAA,CAAA;AACA,IAAA,kBAAA,GAAA,WAAA,CAAA,oBAAA,CAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,WAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA,IAJA;AAKA,MAAA,cAAA,EAAA,CALA;AAMA,MAAA,WAAA,EAAA,IANA;AAOA,MAAA,YAAA,EAAA;AAPA,KAAA;AASA,GAZA;AAaA,EAAA,QAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,OAAA,GAAA,MAAA,GAAA,YAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,aAAA,KAAA,OAAA,GAAA,YAAA,GAAA,WAAA;AACA,KANA;AAOA,IAAA,QAPA,sBAOA;AACA,aAAA,KAAA,OAAA,GAAA,iBAAA,GAAA,gBAAA;AACA,KATA;AAUA,IAAA,UAVA,wBAUA;AACA,aAAA,KAAA,SAAA,GAAA,EAAA,GAAA,SAAA;AACA,KAZA;AAaA,IAAA,OAbA,qBAaA;AACA,aAAA,KAAA,WAAA,GAAA,KAAA,WAAA,CAAA,QAAA;AACA;AAfA,KAgBA,UAAA,CAAA,CACA,YADA,EAEA,SAFA,EAGA,cAHA,CAAA,CAhBA,CAbA;AAmCA,EAAA,OAnCA,qBAmCA;AACA,SAAA,KAAA,GAAA,EAAA;AACA,GArCA;AAsCA,EAAA,OAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,aAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,IAJA,kBAIA;AACA,WAAA,aAAA,CAAA,IAAA;AACA,KANA;AAOA,IAAA,KAPA,iBAOA,EAPA,EAOA,IAPA,EAOA;AAAA,kCACA,KAAA,eAAA,EADA;AAAA,UACA,CADA,yBACA,CADA;AAAA,UACA,CADA,yBACA,CADA;AAAA,UACA,KADA,yBACA,KADA;;AAGA,UAAA,SAAA,GAAA;AACA;AACA,WAAA;AACA,UAAA,SAAA,wBAAA,CAAA,gBAAA,CAAA,yBAAA,KAAA;AADA,SAFA;AAKA,YAAA;AACA,UAAA,SAAA;AADA,SALA;AAQA,aAAA;AACA,UAAA,SAAA;AADA;AARA,OAAA;AAaA,MAAA,UAAA,CAAA,iBAAA,CAAA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,SAAA,EAAA,SAFA;AAGA,QAAA,OAAA,EAAA;AACA,UAAA,QAAA,EAAA,GADA;AAEA,UAAA,MAAA,EAAA;AAFA;AAHA,OAAA;AASA,MAAA,UAAA,CAAA,YAAA,CAAA,KAAA,KAAA,CAAA,SAAA,EAAA,MAAA,EAAA,IAAA;AACA,KAjCA;AAkCA,IAAA,UAlCA,wBAkCA;AACA,MAAA,UAAA,CAAA,mBAAA,CAAA,MAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,GAAA,EAAA;AACA,KArCA;AAsCA,IAAA,KAtCA,iBAsCA,EAtCA,EAsCA,IAtCA,EAsCA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,UAAA,GAAA,UAAA;;AADA,mCAEA,KAAA,eAAA,EAFA;AAAA,UAEA,CAFA,0BAEA,CAFA;AAAA,UAEA,CAFA,0BAEA,CAFA;AAAA,UAEA,KAFA,0BAEA,KAFA;;AAGA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,0BAAA,CAAA,gBAAA,CAAA,yBAAA,KAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,gBAAA,CAAA,eAAA,EAAA,IAAA;AACA,KA3CA;AA4CA,IAAA,UA5CA,wBA4CA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,IAAA,EAAA;AACA,KA/CA;AAgDA,IAAA,aAhDA,2BAgDA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA;AACA;;AACA,WAAA,eAAA,CAAA,CAAA,KAAA,OAAA;;AACA,UAAA,KAAA,YAAA,EAAA;AACA,aAAA,YAAA,CAAA,UAAA;AACA;AACA,KAxDA;AAyDA,IAAA,GAzDA,iBAyDA;AACA,UAAA,KAAA,IAAA,KAAA,QAAA,CAAA,IAAA,EAAA;AACA,aAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,IAAA;AACA;AACA,KA/DA;AAgEA,IAAA,IAhEA,kBAgEA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,WAAA,GAAA,CAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,IAAA;;AACA,UAAA,KAAA,YAAA,EAAA;AACA,aAAA,YAAA,CAAA,IAAA;AACA;AACA,KAtEA;AAuEA,IAAA,IAvEA,kBAuEA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA;AACA;;AACA,UAAA,KAAA,QAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,IAAA;AACA;AACA,OAHA,MAGA;AACA,YAAA,KAAA,GAAA,KAAA,YAAA,GAAA,CAAA;;AACA,YAAA,KAAA,KAAA,KAAA,QAAA,CAAA,MAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA;AACA;;AACA,aAAA,eAAA,CAAA,KAAA;;AACA,YAAA,CAAA,KAAA,OAAA,EAAA;AACA,eAAA,aAAA;AACA;AACA;;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KAzFA;AA0FA,IAAA,IA1FA,kBA0FA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA;AACA;;AACA,UAAA,KAAA,QAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,IAAA;AACA;AACA,OAHA,MAGA;AACA,YAAA,KAAA,GAAA,KAAA,YAAA,GAAA,CAAA;;AACA,YAAA,KAAA,KAAA,CAAA,CAAA,EAAA;AACA,UAAA,KAAA,GAAA,KAAA,QAAA,CAAA,MAAA,GAAA,CAAA;AACA;;AACA,aAAA,eAAA,CAAA,KAAA;;AACA,YAAA,CAAA,KAAA,OAAA,EAAA;AACA,eAAA,aAAA;AACA;AACA;;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KA5GA;AA6GA,IAAA,KA7GA,mBA6GA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,eAAA,CAAA,KAAA,WAAA;AACA,KAhHA;AAiHA,IAAA,KAjHA,mBAiHA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KAnHA;AAoHA,IAAA,UApHA,sBAoHA,CApHA,EAoHA;AACA,WAAA,WAAA,GAAA,CAAA,CAAA,MAAA,CAAA,WAAA;AACA,KAtHA;AAuHA,IAAA,MAvHA,kBAuHA,QAvHA,EAuHA;AACA,MAAA,QAAA,GAAA,QAAA,GAAA,CAAA,CADA,CACA;;AACA,UAAA,MAAA,GAAA,QAAA,GAAA,EAAA,GAAA,CAAA;;AACA,UAAA,MAAA,GAAA,KAAA,IAAA,CAAA,QAAA,GAAA,EAAA,CAAA;;AACA,uBAAA,MAAA,cAAA,MAAA;AACA,KA5HA;AA6HA,IAAA,mBA7HA,+BA6HA,OA7HA,EA6HA;AACA,UAAA,WAAA,GAAA,KAAA,WAAA,CAAA,QAAA,GAAA,OAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,WAAA,GAAA,WAAA;;AACA,UAAA,CAAA,KAAA,OAAA,EAAA;AACA,aAAA,aAAA;AACA;;AACA,UAAA,KAAA,YAAA,EAAA;AACA,aAAA,YAAA,CAAA,IAAA,CAAA,WAAA,GAAA,IAAA;AACA;AACA,KAtIA;AAuIA,IAAA,QAvIA,sBAuIA;AAAA;;AACA,WAAA,WAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,CAAA,WAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA;AACA;;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,IAAA,KAAA,CAAA,KAAA,EAAA,KAAA,CAAA,WAAA,CAAA;;AACA,YAAA,KAAA,CAAA,OAAA,EAAA;AACA,UAAA,KAAA,CAAA,YAAA,CAAA,IAAA;AACA,SAPA,CAQA;;AACA,OATA,EASA,KATA,CASA,YAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,IAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,CAAA;AACA,OAbA;AAcA,KAtJA;AAuJA,IAAA,WAvJA,6BAuJA;AAAA,UAAA,OAAA,QAAA,OAAA;AAAA,UAAA,GAAA,QAAA,GAAA;AACA,WAAA,cAAA,GAAA,OAAA;;AACA,UAAA,OAAA,GAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA,KAAA,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,CAAA,CAAA;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,eAAA,CAAA,MAAA,EAAA,IAAA;AACA,OAHA,MAGA;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,eAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA;AACA;;AACA,WAAA,YAAA,GAAA,GAAA;AACA,KAhKA;AAiKA,IAAA,YAjKA,0BAiKA;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,IAAA;AACA,KAnKA;AAoKA,IAAA,gBApKA,4BAoKA,CApKA,EAoKA;AACA,WAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,WAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,KAAA;AACA,WAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,KAAA;AACA,KAzKA;AA0KA,IAAA,eA1KA,2BA0KA,CA1KA,EA0KA;AACA,UAAA,CAAA,KAAA,KAAA,CAAA,SAAA,EAAA;AACA;AACA;;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,UAAA,MAAA,GAAA,KAAA,CAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA;AACA,UAAA,MAAA,GAAA,KAAA,CAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA;;AACA,UAAA,IAAA,CAAA,GAAA,CAAA,MAAA,IAAA,IAAA,CAAA,GAAA,CAAA,MAAA,CAAA,EAAA;AACA;AACA;;AACA,UAAA,IAAA,GAAA,KAAA,WAAA,KAAA,IAAA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,UAAA;AACA,UAAA,WAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,UAAA,EAAA,IAAA,GAAA,MAAA,CAAA,CAAA;AACA,WAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CAAA,GAAA,CAAA,WAAA,GAAA,MAAA,CAAA,UAAA,CAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,KAAA,CAAA,SAAA,0BAAA,WAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,KAAA,CAAA,kBAAA,IAAA,CAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,GAAA,IAAA,KAAA,KAAA,CAAA,OAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,kBAAA,IAAA,CAAA;AACA,KA3LA;AA4LA,IAAA,cA5LA,0BA4LA,CA5LA,EA4LA;AACA,UAAA,WAAA;AACA,UAAA,OAAA;;AACA,UAAA,KAAA,WAAA,KAAA,IAAA,EAAA;AACA,YAAA,KAAA,KAAA,CAAA,OAAA,GAAA,GAAA,EAAA;AACA,UAAA,WAAA,GAAA,CAAA,MAAA,CAAA,UAAA;AACA,UAAA,OAAA,GAAA,CAAA;AACA,eAAA,WAAA,GAAA,OAAA;AACA,SAJA,MAIA;AACA,UAAA,WAAA,GAAA,CAAA;AACA,UAAA,OAAA,GAAA,CAAA;AACA;AACA,OATA,MASA;AACA,YAAA,KAAA,KAAA,CAAA,OAAA,GAAA,GAAA,EAAA;AACA,UAAA,WAAA,GAAA,CAAA;AACA,UAAA,OAAA,GAAA,CAAA;AACA,eAAA,WAAA,GAAA,IAAA;AACA,SAJA,MAIA;AACA,UAAA,WAAA,GAAA,CAAA,MAAA,CAAA,UAAA;AACA,UAAA,OAAA,GAAA,CAAA;AACA;AACA;;AACA,UAAA,IAAA,GAAA,GAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,KAAA,CAAA,SAAA,0BAAA,WAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,KAAA,CAAA,kBAAA,cAAA,IAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,kBAAA,cAAA,IAAA;AACA,KAvNA;AAwNA,IAAA,IAxNA,gBAwNA,GAxNA,EAwNA;AAAA,UAAA,CAAA,uEAAA,CAAA;AAAA;AACA,UAAA,GAAA,GAAA,GAAA,CAAA,QAAA,GAAA,MAAA;;AACA,aAAA,GAAA,GAAA,CAAA,EAAA;AACA,QAAA,GAAA,GAAA,MAAA,GAAA;AACA,QAAA,GAAA;AACA;;AACA,aAAA,GAAA;AACA,KA/NA;AAgOA,IAAA,eAhOA,6BAgOA;AACA,UAAA,WAAA,GAAA,EAAA;AACA,UAAA,WAAA,GAAA,EAAA;AACA,UAAA,aAAA,GAAA,EAAA;AACA,UAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,UAAA,GAAA,GAAA;AACA,UAAA,KAAA,GAAA,WAAA,GAAA,KAAA;AACA,UAAA,CAAA,GAAA,EAAA,MAAA,CAAA,UAAA,GAAA,CAAA,GAAA,WAAA,CAAA;AACA,UAAA,CAAA,GAAA,MAAA,CAAA,WAAA,GAAA,UAAA,GAAA,KAAA,GAAA,CAAA,GAAA,aAAA;AACA,aAAA;AACA,QAAA,CAAA,EAAA,CADA;AAEA,QAAA,CAAA,EAAA,CAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA;AAKA;AA9OA,KA+OA,YAAA,CAAA;AACA,IAAA,aAAA,EAAA;AADA,GAAA,CA/OA,MAkPA,UAAA,CAAA,CACA,iBADA,CAAA,CAlPA,CAtCA;AA4RA,EAAA,KAAA,EAAA;AACA,IAAA,WADA,uBACA,OADA,EACA,OADA,EACA;AAAA;;AACA,UAAA,CAAA,OAAA,CAAA,EAAA,IAAA,CAAA,OAAA,CAAA,GAAA,IAAA,OAAA,CAAA,EAAA,KAAA,OAAA,CAAA,EAAA,EAAA;AACA;AACA;;AACA,WAAA,SAAA,GAAA,KAAA,CAJA,CAKA;;AACA,UAAA,KAAA,YAAA,EAAA;AACA,aAAA,YAAA,CAAA,IAAA,GADA,CAEA;;AACA,aAAA,YAAA,GAAA,IAAA;AACA,aAAA,WAAA,GAAA,CAAA;AACA,aAAA,YAAA,GAAA,EAAA;AACA,aAAA,cAAA,GAAA,CAAA;AACA;;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,GAAA,GAAA,OAAA,CAAA,GAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,IAAA,GAfA,CAgBA;;AACA,MAAA,YAAA,CAAA,KAAA,KAAA,CAAA;AACA,WAAA,KAAA,GAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,OAFA,EAEA,IAFA,CAAA;AAGA,WAAA,QAAA;AACA,KAvBA;AAwBA,IAAA,OAxBA,mBAwBA,UAxBA,EAwBA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,UAAA,GAAA,KAAA,CAAA,IAAA,EAAA,GAAA,KAAA,CAAA,KAAA,EAAA;AACA,OAFA;AAGA;AA7BA,GA5RA;AA2TA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AAEA,IAAA,cAAA,EAAA,cAFA;AAGA,IAAA,MAAA,EAAA,MAHA;AAIA,IAAA,QAAA,EAAA;AAJA;AA3TA,CAAA","sourcesContent":["<template>\r\n  <div class=\"player\" v-show=\"playlist.length>0\">\r\n    <transition\r\n      name=\"normal\"\r\n      @enter=\"enter\"\r\n      @after-enter=\"afterEnter\"\r\n      @leave=\"leave\"\r\n      @after-leave=\"afterLeave\"\r\n    >\r\n      <div class=\"normal-player\" v-show=\"fullScreen\">\r\n        <div class=\"background\">\r\n          <img width=\"100%\" height=\"100%\" :src=\"currentSong.image\" />\r\n        </div>\r\n        <div class=\"top\">\r\n          <div class=\"back\" @click=\"back\">\r\n            <i class=\"icon-back\"></i>\r\n          </div>\r\n          <h1 class=\"title\" v-html=\"currentSong.name\"></h1>\r\n          <h2 class=\"subtitle\" v-html=\"currentSong.singer\"></h2>\r\n        </div>\r\n        <div\r\n          class=\"middle\"\r\n          @touchstart.prevent=\"middleTouchStart\"\r\n          @touchmove.prevent=\"middleTouchMove\"\r\n          @touchend=\"middleTouchEnd\"\r\n        >\r\n          <div class=\"middle-l\" ref=\"middleL\">\r\n            <div class=\"cd-wrapper\" ref=\"cdWrapper\">\r\n              <div class=\"cd\" :class=\"cdCls\">\r\n                <img class=\"image\" :src=\"currentSong.image\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"playing-lyric-wrapper\">\r\n              <div class=\"playing-lyric\">{{playingLyric}}</div>\r\n            </div>\r\n          </div>\r\n          <scroll class=\"middle-r\" ref=\"lyricList\" :data=\"currentLyric && currentLyric.lines\">\r\n            <div class=\"lyric-wrapper\">\r\n              <div v-if=\"currentLyric\">\r\n                <p\r\n                  ref=\"lyricLine\"\r\n                  class=\"text\"\r\n                  :class=\"{'current': currentLineNum === index}\"\r\n                  v-for=\"(line,index) in currentLyric.lines\"\r\n                  :key=\"index\"\r\n                >{{line.txt}}</p>\r\n              </div>\r\n            </div>\r\n          </scroll>\r\n        </div>\r\n        <div class=\"bottom\">\r\n          <div class=\"dot-wrapper\">\r\n            <span class=\"dot\" :class=\"{'active' : currentShow === 'cd'}\"></span>\r\n            <span class=\"dot\" :class=\"{'active' : currentShow === 'lyric'}\"></span>\r\n          </div>\r\n          <div class=\"progress-wrapper\">\r\n            <span class=\"time time-l\">{{format(currentTime)}}</span>\r\n            <div class=\"progress-bar-wrapper\">\r\n              <progress-bar :percent=\"percent\" @percentChange=\"onProgressBarChange\"></progress-bar>\r\n            </div>\r\n            <span class=\"time time-r\">{{format(currentSong.duration)}}</span>\r\n          </div>\r\n          <div class=\"operators\">\r\n            <div class=\"icon i-left\" @click=\"changeMode\">\r\n              <i :class=\"iconMode\"></i>\r\n            </div>\r\n            <div class=\"icon i-left\" :class=\"disableCls\">\r\n              <i @click=\"prev\" class=\"icon-prev\"></i>\r\n            </div>\r\n            <div class=\"icon i-center\" :class=\"disableCls\">\r\n              <i @click=\"togglePlaying\" :class=\"playIcon\"></i>\r\n            </div>\r\n            <div class=\"icon i-right\" :class=\"disableCls\">\r\n              <i @click=\"next\" class=\"icon-next\"></i>\r\n            </div>\r\n            <div class=\"icon i-right\">\r\n              <i\r\n                class=\"icon\"\r\n                @click=\"toggleFavorite(currentSong)\"\r\n                :class=\"getFavoriteIcon(currentSong)\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <transition name=\"mini\">\r\n      <div class=\"mini-player\" v-show=\"!fullScreen\" @click=\"open\">\r\n        <div class=\"icon\">\r\n          <img :class=\"cdCls\" width=\"40\" height=\"40\" :src=\"currentSong.image\" />\r\n        </div>\r\n        <div class=\"text\">\r\n          <h2 class=\"name\" v-html=\"currentSong.name\"></h2>\r\n          <p class=\"desc\" v-html=\"currentSong.singer\"></p>\r\n        </div>\r\n        <div class=\"control\">\r\n          <progress-circle :radius=\"radius\" :percent=\"percent\">\r\n            <i @click.stop=\"togglePlaying\" class=\"icon-mini\" :class=\"miniIcon\"></i>\r\n          </progress-circle>\r\n        </div>\r\n        <div class=\"control\" @click.stop @click=\"showPlaylist\">\r\n          <i class=\"icon-playlist\"></i>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <playlist ref=\"playlist\"></playlist>\r\n    <audio ref=\"audio\" @caplay=\"ready\" @error=\"error\" @timeupdate=\"updateTime\" @ended=\"end\"></audio>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/ecmascript-6\">\r\nimport { mapGetters, mapMutations, mapActions } from 'vuex'\r\nimport animations from 'create-keyframe-animation'\r\nimport { prefixStyle } from 'common/js/dom'\r\nimport ProgressBar from 'base/progress-bar/progress-bar'\r\nimport ProgressCircle from 'base/progress-circle/progress-circle'\r\nimport { playMode } from 'common/js/config'\r\nimport Lyric from 'lyric-parser'\r\nimport Scroll from 'base/scroll/scroll'\r\nimport Playlist from 'components/playlist/playlist'\r\nimport { playerMixin } from 'common/js/mixin'\r\n\r\nconst transform = prefixStyle('transform')\r\nconst transitionDuration = prefixStyle('transitionDuration')\r\n\r\nexport default {\r\n  mixins: [playerMixin],\r\n  data () {\r\n    return {\r\n      songReady: false,\r\n      currentTime: 0,\r\n      radius: 32,\r\n      currentLyric: null,\r\n      currentLineNum: 0,\r\n      currentShow: 'cd',\r\n      playingLyric: ''\r\n    }\r\n  },\r\n  computed: {\r\n    cdCls () {\r\n      return this.playing ? 'play' : 'play pause'\r\n    },\r\n    playIcon () {\r\n      return this.playing ? 'icon-pause' : 'icon-play'\r\n    },\r\n    miniIcon () {\r\n      return this.playing ? 'icon-pause-mini' : 'icon-play-mini'\r\n    },\r\n    disableCls () {\r\n      return this.songReady ? '' : 'disable'\r\n    },\r\n    percent () {\r\n      return this.currentTime / this.currentSong.duration\r\n    },\r\n    ...mapGetters([\r\n      'fullScreen',\r\n      'playing',\r\n      'currentIndex'\r\n    ])\r\n  },\r\n  created () {\r\n    this.touch = {}\r\n  },\r\n  methods: {\r\n    back () {\r\n      this.setFullScreen(false)\r\n    },\r\n    open () {\r\n      this.setFullScreen(true)\r\n    },\r\n    enter (el, done) {\r\n      const { x, y, scale } = this._getPosAndScale()\r\n\r\n      let animation = {\r\n        // 设置百分比下的动画\r\n        0: {\r\n          transform: `translate3d(${x}px,${y}px,0) scale(${scale})`\r\n        },\r\n        60: {\r\n          transform: `translate3d(0,0,0) scale(1.1)`\r\n        },\r\n        100: {\r\n          transform: `translate3d(0,0,0) scale(1)`\r\n        }\r\n      }\r\n\r\n      animations.registerAnimation({\r\n        name: 'move',\r\n        animation,\r\n        presets: {\r\n          duration: 400,\r\n          easing: 'linear'\r\n        }\r\n      })\r\n\r\n      animations.runAnimation(this.$refs.cdWrapper, 'move', done)\r\n    },\r\n    afterEnter () {\r\n      animations.unregisterAnimation('move')\r\n      this.$refs.cdWrapper.style.animation = ''\r\n    },\r\n    leave (el, done) {\r\n      this.$refs.cdWrapper.style.transition = 'all 0.4s'\r\n      const { x, y, scale } = this._getPosAndScale()\r\n      this.$refs.cdWrapper.style[transform] = `translate3d(${x}px,${y}px,0) scale(${scale})`\r\n      this.$refs.cdWrapper.addEventListener('transitionend', done)\r\n    },\r\n    afterLeave () {\r\n      this.$refs.cdWrapper.style.transition = ''\r\n      this.$refs.cdWrapper.style[transform] = ''\r\n    },\r\n    togglePlaying () {\r\n      if (!this.songReady) {\r\n        return\r\n      }\r\n      this.setPlayingState(!this.playing)\r\n      if (this.currentLyric) {\r\n        this.currentLyric.togglePlay()\r\n      }\r\n    },\r\n    end () {\r\n      if (this.mode === playMode.loop) {\r\n        this.loop()\r\n      } else {\r\n        this.next()\r\n      }\r\n    },\r\n    loop () {\r\n      this.$refs.audio.currentTime = 0\r\n      this.$refs.audio.play()\r\n      if (this.currentLyric) {\r\n        this.currentLyric.seek()\r\n      }\r\n    },\r\n    next () {\r\n      if (!this.songReady) {\r\n        return\r\n      }\r\n      if (this.playlist.length === 1) {\r\n        this.loop()\r\n        return\r\n      } else {\r\n        let index = this.currentIndex + 1\r\n        if (index === this.playlist.length) {\r\n          index = 0\r\n        }\r\n        this.setCurrentIndex(index)\r\n        if (!this.playing) {\r\n          this.togglePlaying()\r\n        }\r\n      }\r\n      this.songReady = false\r\n    },\r\n    prev () {\r\n      if (!this.songReady) {\r\n        return\r\n      }\r\n      if (this.playlist.length === 1) {\r\n        this.loop()\r\n        return\r\n      } else {\r\n        let index = this.currentIndex - 1\r\n        if (index === -1) {\r\n          index = this.playlist.length - 1\r\n        }\r\n        this.setCurrentIndex(index)\r\n        if (!this.playing) {\r\n          this.togglePlaying()\r\n        }\r\n      }\r\n      this.songReady = false\r\n    },\r\n    ready () {\r\n      this.songReady = true\r\n      this.savePlayHistory(this.currentSong)\r\n    },\r\n    error () {\r\n      this.songReady = true\r\n    },\r\n    updateTime (e) {\r\n      this.currentTime = e.target.currentTime\r\n    },\r\n    format (interval) {\r\n      interval = interval | 0 // 正数向下取整，相当于调用math.floor\r\n      const minute = interval / 60 | 0\r\n      const second = this._pad(interval % 60)\r\n      return `${minute}:${second}`\r\n    },\r\n    onProgressBarChange (percent) {\r\n      const currentTime = this.currentSong.duration * percent\r\n      this.$refs.audio.currentTime = currentTime\r\n      if (!this.playing) {\r\n        this.togglePlaying()\r\n      }\r\n      if (this.currentLyric) {\r\n        this.currentLyric.seek(currentTime * 1000)\r\n      }\r\n    },\r\n    getLyric () {\r\n      this.currentSong.getLyric().then((lyric) => {\r\n        if (this.currentSong.lyric !== lyric) {\r\n          return\r\n        }\r\n        this.currentLyric = new Lyric(lyric, this.handleLyric)\r\n        if (this.playing) {\r\n          this.currentLyric.play()\r\n        }\r\n        // console.log(this.currentLyric)\r\n      }).catch(() => {\r\n        this.currentLyric = null\r\n        this.playingLyric = ''\r\n        this.currentLineNum = 0\r\n      })\r\n    },\r\n    handleLyric ({ lineNum, txt }) {\r\n      this.currentLineNum = lineNum\r\n      if (lineNum > 5) {\r\n        let lineEl = this.$refs.lyricLine[lineNum - 5]\r\n        this.$refs.lyricList.scrollToElement(lineEl, 1000)\r\n      } else {\r\n        this.$refs.lyricList.scrollToElement(0, 0, 1000)\r\n      }\r\n      this.playingLyric = txt\r\n    },\r\n    showPlaylist () {\r\n      this.$refs.playlist.show()\r\n    },\r\n    middleTouchStart (e) {\r\n      this.touch.initiated = true\r\n      const touch = e.touches[0]\r\n      this.touch.startX = touch.pageX\r\n      this.touch.startY = touch.pageY\r\n    },\r\n    middleTouchMove (e) {\r\n      if (!this.touch.initiated) {\r\n        return\r\n      }\r\n      const touch = e.touches[0]\r\n      const deltaX = touch.pageX - this.touch.startX\r\n      const deltaY = touch.pageY - this.touch.startY\r\n      if (Math.abs(deltaY) > Math.abs(deltaX)) {\r\n        return\r\n      }\r\n      const left = this.currentShow === 'cd' ? 0 : -window.innerWidth\r\n      const offsetWidth = Math.min(0, Math.max(-window.innerWidth, left + deltaX))\r\n      this.touch.percent = Math.abs(offsetWidth / window.innerWidth)\r\n      this.$refs.lyricList.$el.style[transform] = `translate3d(${offsetWidth}px,0,0)`\r\n      this.$refs.lyricList.$el.style[transitionDuration] = 0\r\n      this.$refs.middleL.style.opacity = 1 - this.touch.percent\r\n      this.$refs.middleL.style[transitionDuration] = 0\r\n    },\r\n    middleTouchEnd (e) {\r\n      let offsetWidth\r\n      let opacity\r\n      if (this.currentShow === 'cd') {\r\n        if (this.touch.percent > 0.1) {\r\n          offsetWidth = -window.innerWidth\r\n          opacity = 0\r\n          this.currentShow = 'lyric'\r\n        } else {\r\n          offsetWidth = 0\r\n          opacity = 1\r\n        }\r\n      } else {\r\n        if (this.touch.percent < 0.9) {\r\n          offsetWidth = 0\r\n          opacity = 1\r\n          this.currentShow = 'cd'\r\n        } else {\r\n          offsetWidth = -window.innerWidth\r\n          opacity = 0\r\n        }\r\n      }\r\n      const time = 300\r\n      this.$refs.lyricList.$el.style[transform] = `translate3d(${offsetWidth}px,0,0)`\r\n      this.$refs.lyricList.$el.style[transitionDuration] = `${time}ms`\r\n      this.$refs.middleL.style.opacity = opacity\r\n      this.$refs.middleL.style[transitionDuration] = `${time}ms`\r\n    },\r\n    _pad (num, n = 2) { // 补位,如果秒为取整不够2位，则补0，如果大于则直接返回\r\n      let len = num.toString().length\r\n      while (len < n) {\r\n        num = '0' + num\r\n        len++\r\n      }\r\n      return num\r\n    },\r\n    _getPosAndScale () {\r\n      const targetWidth = 40\r\n      const paddingLeft = 40\r\n      const paddingBottom = 30\r\n      const paddingTop = 80\r\n      const width = window.innerWidth * 0.8\r\n      const scale = targetWidth / width\r\n      const x = -(window.innerWidth / 2 - paddingLeft)\r\n      const y = window.innerHeight - paddingTop - width / 2 - paddingBottom\r\n      return {\r\n        x,\r\n        y,\r\n        scale\r\n      }\r\n    },\r\n    ...mapMutations({\r\n      setFullScreen: 'SET_FULL_SCREEN'\r\n    }),\r\n    ...mapActions([\r\n      'savePlayHistory'\r\n    ])\r\n  },\r\n  watch: {\r\n    currentSong (newSong, oldSong) {\r\n      if (!newSong.id || !newSong.url || newSong.id === oldSong.id) {\r\n        return\r\n      }\r\n      this.songReady = false\r\n      // this.canLyricPlay = false\r\n      if (this.currentLyric) {\r\n        this.currentLyric.stop()\r\n        // 重置为null\r\n        this.currentLyric = null\r\n        this.currentTime = 0\r\n        this.playingLyric = ''\r\n        this.currentLineNum = 0\r\n      }\r\n      this.$refs.audio.src = newSong.url\r\n      this.$refs.audio.play()\r\n      // 若歌曲 5s 未播放，则认为超时，修改状态确保可以切换歌曲。\r\n      clearTimeout(this.timer)\r\n      this.timer = setTimeout(() => {\r\n        this.songReady = true\r\n      }, 1000)\r\n      this.getLyric()\r\n    },\r\n    playing (newPlaying) {\r\n      const audio = this.$refs.audio\r\n      this.$nextTick(() => {\r\n        newPlaying ? audio.play() : audio.pause()\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    ProgressBar,\r\n    ProgressCircle,\r\n    Scroll,\r\n    Playlist\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\r\n@import '~common/stylus/variable'\r\n@import '~common/stylus/mixin'\r\n.player\r\n  .normal-player\r\n    position fixed\r\n    left 0\r\n    right 0\r\n    top 0\r\n    bottom 0\r\n    z-index 150\r\n    background $color-background\r\n    .background\r\n      position absolute\r\n      left 0\r\n      top 0\r\n      width 100%\r\n      height 100%\r\n      z-index -1\r\n      opacity 0.6\r\n      filter blur(20px)\r\n    .top\r\n      position relative\r\n      margin-bottom 25px\r\n      .back\r\n        position absolute\r\n        top 0\r\n        left 6px\r\n        z-index 50\r\n        .icon-back\r\n          display block\r\n          padding 9px\r\n          font-size $font-size-large-x\r\n          color $color-theme\r\n          transform rotate(-90deg)\r\n      .title\r\n        width 70%\r\n        margin 0 auto\r\n        line-height 40px\r\n        text-align center\r\n        no-wrap()\r\n        font-size $font-size-large\r\n        color $color-text\r\n      .subtitle\r\n        line-height 20px\r\n        text-align center\r\n        font-size $font-size-medium\r\n        color $color-text\r\n    .middle\r\n      position fixed\r\n      width 100%\r\n      top 80px\r\n      bottom 170px\r\n      white-space nowrap\r\n      font-size 0\r\n      .middle-l\r\n        display inline-block\r\n        vertical-align top\r\n        position relative\r\n        width 100%\r\n        height 0\r\n        padding-top 80%\r\n        .cd-wrapper\r\n          position absolute\r\n          left 10%\r\n          top 0\r\n          width 80%\r\n          height 100%\r\n          .cd\r\n            width 100%\r\n            height 100%\r\n            box-sizing border-box\r\n            border 10px solid rgba(255, 255, 255, 0.1)\r\n            border-radius 50%\r\n            &.play\r\n              animation rotate 20s linear infinite\r\n            &.pause\r\n              animation-play-state paused\r\n            .image\r\n              position absolute\r\n              left 0\r\n              top 0\r\n              width 100%\r\n              height 100%\r\n              border-radius 50%\r\n        .playing-lyric-wrapper\r\n          width 80%\r\n          margin 30px auto 0 auto\r\n          overflow hidden\r\n          text-align center\r\n          .playing-lyric\r\n            height 20px\r\n            line-height 20px\r\n            font-size $font-size-medium\r\n            color $color-text-l\r\n      .middle-r\r\n        display inline-block\r\n        vertical-align top\r\n        width 100%\r\n        height 100%\r\n        overflow hidden\r\n        .lyric-wrapper\r\n          width 80%\r\n          margin 0 auto\r\n          overflow hidden\r\n          text-align center\r\n          .text\r\n            line-height 32px\r\n            color $color-text-l\r\n            font-size $font-size-medium\r\n            &.current\r\n              color $color-text\r\n    .bottom\r\n      position absolute\r\n      bottom 50px\r\n      width 100%\r\n      .dot-wrapper\r\n        text-align center\r\n        font-size 0\r\n        .dot\r\n          display inline-block\r\n          vertical-align middle\r\n          margin 0 4px\r\n          width 8px\r\n          height 8px\r\n          border-radius 50%\r\n          background $color-text-l\r\n          &.active\r\n            width 20px\r\n            border-radius 5px\r\n            background $color-text-ll\r\n      .progress-wrapper\r\n        display flex\r\n        align-items center\r\n        width 80%\r\n        margin 0px auto\r\n        padding 10px 0\r\n        .time\r\n          color $color-text\r\n          font-size $font-size-small\r\n          flex 0 0 30px\r\n          line-height 30px\r\n          width 30px\r\n          &.time-l\r\n            text-align left\r\n          &.time-r\r\n            text-align right\r\n        .progress-bar-wrapper\r\n          flex 1\r\n      .operators\r\n        display flex\r\n        align-items center\r\n        .icon\r\n          flex 1\r\n          color $color-theme\r\n          &.disable\r\n            color $color-theme-d\r\n          i\r\n            font-size 30px\r\n        .i-left\r\n          text-align right\r\n        .i-center\r\n          padding 0 20px\r\n          text-align center\r\n          i\r\n            font-size 40px\r\n        .i-right\r\n          text-align left\r\n        .icon-favorite\r\n          color $color-sub-theme\r\n    &.normal-enter-active, &.normal-leave-active\r\n      transition all 0.4s\r\n      .top, .bottom\r\n        transition all 0.4s cubic-bezier(0.86, 0.18, 0.82, 1.32)\r\n    &.normal-enter, &.normal-leave-to\r\n      opacity 0\r\n      .top\r\n        transform translate3d(0, -100px, 0)\r\n      .bottom\r\n        transform translate3d(0, 100px, 0)\r\n  .mini-player\r\n    display flex\r\n    align-items center\r\n    position fixed\r\n    left 0\r\n    bottom 0\r\n    z-index 180\r\n    width 100%\r\n    height 60px\r\n    background $color-highlight-background\r\n    &.mini-enter-active, &.mini-leave-active\r\n      transition all 0.4s\r\n    &.mini-enter, &.mini-leave-to\r\n      opacity 0\r\n    .icon\r\n      flex 0 0 40px\r\n      width 40px\r\n      padding 0 10px 0 20px\r\n      img\r\n        border-radius 50%\r\n        &.play\r\n          animation rotate 10s linear infinite\r\n        &.pause\r\n          animation-play-state paused\r\n    .text\r\n      display flex\r\n      flex-direction column\r\n      justify-content center\r\n      flex 1\r\n      line-height 20px\r\n      overflow hidden\r\n      .name\r\n        margin-bottom 2px\r\n        no-wrap()\r\n        font-size $font-size-medium\r\n        color $color-text\r\n      .desc\r\n        no-wrap()\r\n        font-size $font-size-small\r\n        color $color-text-d\r\n    .control\r\n      flex 0 0 30px\r\n      width 30px\r\n      padding 0 10px\r\n      .icon-play-mini, .icon-pause-mini, .icon-playlist\r\n        font-size 30px\r\n        color $color-theme-d\r\n      .icon-mini\r\n        font-size 32px\r\n        position absolute\r\n        left 0\r\n        top 0\r\n@keyframes rotate\r\n  0%\r\n    transform rotate(0)\r\n  100%\r\n    transform rotate(360deg)\r\n</style>"],"sourceRoot":"src/components/player"}]}