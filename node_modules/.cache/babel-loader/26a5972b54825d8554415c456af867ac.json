{"remainingRequest":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js!E:\\vue-music\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\vue-music\\src\\api\\mv.js","dependencies":[{"path":"E:\\vue-music\\src\\api\\mv.js","mtime":1572577706387},{"path":"E:\\vue-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-music\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport { commonParams } from \"./config\";\nimport jsonp from 'common/js/jsonp';\nimport axios from 'axios';\nexport function getMvList() {\n  var url = '/api/search';\n  var data = Object.assign({}, commonParams, {\n    ct: 24,\n    hostUin: 0,\n    needNewCode: 0,\n    platform: 'yqq.json',\n    format: 'json',\n    notice: 0,\n    g_tk: 5381,\n    qqmusic_ver: 1298,\n    remoteplace: 'txt.yqq.mv',\n    searchid: 127522763080551074,\n    aggr: 0,\n    catZhida: 1,\n    lossless: 0,\n    sem: 1,\n    t: 12,\n    p: 1,\n    n: 12,\n    w: '米津玄師'\n  });\n  return axios.get(url, {\n    params: data\n  }).then(function (res) {\n    return Promise.resolve(res.data);\n  });\n}\nexport function getMvUrl(mvList) {\n  var url = 'https://u.y.qq.com/cgi-bin/musicu.fcg';\n  var data = JSON.stringify(getParams(mvList));\n  var common = Object.assign({}, commonParams, {\n    g_tk: 5381,\n    hostUin: 0,\n    format: 'jsonp',\n    inCharset: 'utf8',\n    outCharset: 'GB2312',\n    notice: 0,\n    platform: 'yqq',\n    needNewCode: 0,\n    data: data\n  });\n  return jsonp(url, common);\n}\n\nfunction getParams(vids) {\n  var ret = [];\n  vids.forEach(function (item) {\n    ret.push(item.v_id);\n  });\n  return {\n    getMvUrl: {\n      module: 'gosrf.Stream.MvUrlProxy',\n      method: 'GetMvUrls',\n      param: {\n        vids: ret,\n        request_typet: 10001\n      }\n    }\n  };\n}",{"version":3,"sources":["E:\\vue-music\\src\\api\\mv.js"],"names":["commonParams","jsonp","axios","getMvList","url","data","Object","assign","ct","hostUin","needNewCode","platform","format","notice","g_tk","qqmusic_ver","remoteplace","searchid","aggr","catZhida","lossless","sem","t","p","n","w","get","params","then","res","Promise","resolve","getMvUrl","mvList","JSON","stringify","getParams","common","inCharset","outCharset","vids","ret","forEach","item","push","v_id","module","method","param","request_typet"],"mappings":";AAAA,SACEA,YADF;AAGA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1B,MAAMC,GAAG,GAAG,aAAZ;AAEA,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,YAAlB,EAAgC;AAC3CQ,IAAAA,EAAE,EAAE,EADuC;AAE3CC,IAAAA,OAAO,EAAE,CAFkC;AAG3CC,IAAAA,WAAW,EAAE,CAH8B;AAI3CC,IAAAA,QAAQ,EAAE,UAJiC;AAK3CC,IAAAA,MAAM,EAAE,MALmC;AAM3CC,IAAAA,MAAM,EAAE,CANmC;AAO3CC,IAAAA,IAAI,EAAE,IAPqC;AAQ3CC,IAAAA,WAAW,EAAE,IAR8B;AAS3CC,IAAAA,WAAW,EAAE,YAT8B;AAU3CC,IAAAA,QAAQ,EAAE,kBAViC;AAW3CC,IAAAA,IAAI,EAAE,CAXqC;AAY3CC,IAAAA,QAAQ,EAAE,CAZiC;AAa3CC,IAAAA,QAAQ,EAAE,CAbiC;AAc3CC,IAAAA,GAAG,EAAE,CAdsC;AAe3CC,IAAAA,CAAC,EAAE,EAfwC;AAgB3CC,IAAAA,CAAC,EAAE,CAhBwC;AAiB3CC,IAAAA,CAAC,EAAE,EAjBwC;AAkB3CC,IAAAA,CAAC,EAAE;AAlBwC,GAAhC,CAAb;AAqBA,SAAOvB,KAAK,CAACwB,GAAN,CAAUtB,GAAV,EAAe;AACpBuB,IAAAA,MAAM,EAAEtB;AADY,GAAf,EAEJuB,IAFI,CAEC,UAACC,GAAD,EAAS;AACf,WAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACxB,IAApB,CAAP;AACD,GAJM,CAAP;AAKD;AAED,OAAO,SAAS2B,QAAT,CAAkBC,MAAlB,EAA0B;AAC/B,MAAM7B,GAAG,GAAG,uCAAZ;AAEA,MAAMC,IAAI,GAAG6B,IAAI,CAACC,SAAL,CAAeC,SAAS,CAACH,MAAD,CAAxB,CAAb;AAEA,MAAMI,MAAM,GAAG/B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,YAAlB,EAAgC;AAC7Cc,IAAAA,IAAI,EAAE,IADuC;AAE7CL,IAAAA,OAAO,EAAE,CAFoC;AAG7CG,IAAAA,MAAM,EAAE,OAHqC;AAI7C0B,IAAAA,SAAS,EAAE,MAJkC;AAK7CC,IAAAA,UAAU,EAAE,QALiC;AAM7C1B,IAAAA,MAAM,EAAE,CANqC;AAO7CF,IAAAA,QAAQ,EAAE,KAPmC;AAQ7CD,IAAAA,WAAW,EAAE,CARgC;AAS7CL,IAAAA,IAAI,EAAEA;AATuC,GAAhC,CAAf;AAYA,SAAOJ,KAAK,CAACG,GAAD,EAAMiC,MAAN,CAAZ;AACD;;AAED,SAASD,SAAT,CAAmBI,IAAnB,EAAyB;AACvB,MAAIC,GAAG,GAAG,EAAV;AAEAD,EAAAA,IAAI,CAACE,OAAL,CAAa,UAACC,IAAD,EAAU;AACrBF,IAAAA,GAAG,CAACG,IAAJ,CAASD,IAAI,CAACE,IAAd;AACD,GAFD;AAIA,SAAO;AACLb,IAAAA,QAAQ,EAAE;AACRc,MAAAA,MAAM,EAAE,yBADA;AAERC,MAAAA,MAAM,EAAE,WAFA;AAGRC,MAAAA,KAAK,EAAE;AACLR,QAAAA,IAAI,EAAEC,GADD;AAELQ,QAAAA,aAAa,EAAE;AAFV;AAHC;AADL,GAAP;AAUD","sourcesContent":["import {\r\n  commonParams\r\n} from './config'\r\nimport jsonp from 'common/js/jsonp'\r\nimport axios from 'axios'\r\n\r\nexport function getMvList() {\r\n  const url = '/api/search'\r\n\r\n  const data = Object.assign({}, commonParams, {\r\n    ct: 24,\r\n    hostUin: 0,\r\n    needNewCode: 0,\r\n    platform: 'yqq.json',\r\n    format: 'json',\r\n    notice: 0,\r\n    g_tk: 5381,\r\n    qqmusic_ver: 1298,\r\n    remoteplace: 'txt.yqq.mv',\r\n    searchid: 127522763080551074,\r\n    aggr: 0,\r\n    catZhida: 1,\r\n    lossless: 0,\r\n    sem: 1,\r\n    t: 12,\r\n    p: 1,\r\n    n: 12,\r\n    w: '米津玄師'\r\n  })\r\n\r\n  return axios.get(url, {\r\n    params: data\r\n  }).then((res) => {\r\n    return Promise.resolve(res.data)\r\n  })\r\n}\r\n\r\nexport function getMvUrl(mvList) {\r\n  const url = 'https://u.y.qq.com/cgi-bin/musicu.fcg'\r\n\r\n  const data = JSON.stringify(getParams(mvList))\r\n\r\n  const common = Object.assign({}, commonParams, {\r\n    g_tk: 5381,\r\n    hostUin: 0,\r\n    format: 'jsonp',\r\n    inCharset: 'utf8',\r\n    outCharset: 'GB2312',\r\n    notice: 0,\r\n    platform: 'yqq',\r\n    needNewCode: 0,\r\n    data: data\r\n  })\r\n\r\n  return jsonp(url, common)\r\n}\r\n\r\nfunction getParams(vids) {\r\n  let ret = []\r\n\r\n  vids.forEach((item) => {\r\n    ret.push(item.v_id)\r\n  })\r\n\r\n  return {\r\n    getMvUrl: {\r\n      module: 'gosrf.Stream.MvUrlProxy',\r\n      method: 'GetMvUrls',\r\n      param: {\r\n        vids: ret,\r\n        request_typet: 10001\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}]}